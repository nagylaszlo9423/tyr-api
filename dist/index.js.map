{"version":3,"sources":["webpack://tyr-map/webpack/universalModuleDefinition","webpack://tyr-map/webpack/bootstrap","webpack://tyr-map/external \"axios\"","webpack://tyr-map/./src/index.ts","webpack://tyr-map/./src/axios/api.ts","webpack://tyr-map/external \"url\"","webpack://tyr-map/./src/axios/base.ts","webpack://tyr-map/./src/node/model/audit.ts","webpack://tyr-map/./src/node/model/createRouteRequest.ts","webpack://tyr-map/./src/node/model/errorResponse.ts","webpack://tyr-map/./src/node/model/inlineObject.ts","webpack://tyr-map/./src/node/model/lineString.ts","webpack://tyr-map/./src/node/model/loginRequest.ts","webpack://tyr-map/./src/node/model/loginResponse.ts","webpack://tyr-map/./src/node/model/routeResponse.ts","webpack://tyr-map/./src/node/model/tokenResponse.ts","webpack://tyr-map/./src/node/model/updateRouteRequest.ts"],"names":["root","factory","exports","module","define","amd","global","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","AxiosApi","axiosApi","DefaultApiAxiosParamCreator","configuration","shareInGroup","routeId","groupId","options","RequiredError","baseOptions","localVarPath","replace","encodeURIComponent","String","localVarUrlObj","globalImportUrl","parse","localVarRequestOptions","method","query","search","headers","url","format","token","grantType","code","redirectUri","clientId","refreshToken","localVarQueryParameter","undefined","DefaultApiFp","localVarAxiosArgs","axios","basePath","BASE_PATH","axiosRequestArgs","request","DefaultApiFactory","this","BaseAPI","DefaultApi","OauthApiAxiosParamCreator","authorize","responseType","login","loginRequest","localVarHeaderParameter","needsSerialization","data","JSON","stringify","logout","authorization","register","inlineObject","OauthApiFp","OauthApiFactory","OauthApi","RouteApiAxiosParamCreator","createRoute","createRouteRequest","deleteRouteById","id","getRouteById","updateRouteById","updateRouteRequest","RouteApiFp","RouteApiFactory","RouteApi","COLLECTION_FORMATS","csv","ssv","tsv","pipes","field","msg","Error","getAttributeTypeMap","Audit","attributeTypeMap","discriminator","CreateRouteRequest","ErrorResponse","InlineObject","LineString","LoginRequest","LoginResponse","RouteResponse","TokenResponse","UpdateRouteRequest"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"tyr-map\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"tyr-map\"] = factory();\n\telse\n\t\troot[\"tyr-map\"] = factory();\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = require(\"axios\");","import * as axiosApi from './axios/api';\nexport const AxiosApi = axiosApi;\nexport * from './node/model/audit';\nexport * from './node/model/createRouteRequest';\nexport * from './node/model/errorResponse';\nexport * from './node/model/inlineObject';\nexport * from './node/model/lineString';\nexport * from './node/model/loginRequest';\nexport * from './node/model/loginResponse';\nexport * from './node/model/routeResponse';\nexport * from './node/model/tokenResponse';\nexport * from './node/model/updateRouteRequest';\n","// tslint:disable\n/**\n * swagger\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as globalImportUrl from 'url';\nimport { Configuration } from './configuration';\nimport globalAxios, { AxiosPromise, AxiosInstance } from 'axios';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from './base';\n\n/**\n * \n * @export\n * @interface Audit\n */\nexport interface Audit {\n    /**\n     * \n     * @type {string}\n     * @memberof Audit\n     */\n    createdBy?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Audit\n     */\n    createdAt?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Audit\n     */\n    modifiedBy?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Audit\n     */\n    modifiedAt?: string;\n}\n/**\n * \n * @export\n * @interface CreateRouteRequest\n */\nexport interface CreateRouteRequest {\n    /**\n     * \n     * @type {string}\n     * @memberof CreateRouteRequest\n     */\n    title?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof CreateRouteRequest\n     */\n    description?: string;\n    /**\n     * \n     * @type {LineString}\n     * @memberof CreateRouteRequest\n     */\n    path?: LineString;\n}\n/**\n * \n * @export\n * @interface ErrorResponse\n */\nexport interface ErrorResponse {\n    /**\n     * \n     * @type {string}\n     * @memberof ErrorResponse\n     */\n    cause: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ErrorResponse\n     */\n    message?: string;\n}\n/**\n * \n * @export\n * @interface InlineObject\n */\nexport interface InlineObject {\n    /**\n     * \n     * @type {string}\n     * @memberof InlineObject\n     */\n    email?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof InlineObject\n     */\n    password?: string;\n}\n/**\n * \n * @export\n * @interface LineString\n */\nexport interface LineString {\n    /**\n     * \n     * @type {string}\n     * @memberof LineString\n     */\n    type?: string;\n    /**\n     * \n     * @type {Array<Array<number>>}\n     * @memberof LineString\n     */\n    coordinates?: Array<Array<number>>;\n}\n/**\n * \n * @export\n * @interface LoginRequest\n */\nexport interface LoginRequest {\n    /**\n     * \n     * @type {string}\n     * @memberof LoginRequest\n     */\n    email?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof LoginRequest\n     */\n    password?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof LoginRequest\n     */\n    clientId?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof LoginRequest\n     */\n    redirectUri?: string;\n}\n/**\n * \n * @export\n * @interface LoginResponse\n */\nexport interface LoginResponse {\n    /**\n     * \n     * @type {string}\n     * @memberof LoginResponse\n     */\n    code?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof LoginResponse\n     */\n    redirectUri?: string;\n}\n/**\n * \n * @export\n * @interface RouteResponse\n */\nexport interface RouteResponse {\n    /**\n     * \n     * @type {string}\n     * @memberof RouteResponse\n     */\n    title?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof RouteResponse\n     */\n    description?: string;\n    /**\n     * \n     * @type {LineString}\n     * @memberof RouteResponse\n     */\n    path?: LineString;\n    /**\n     * \n     * @type {Audit}\n     * @memberof RouteResponse\n     */\n    audit?: Audit;\n}\n/**\n * \n * @export\n * @interface TokenResponse\n */\nexport interface TokenResponse {\n    /**\n     * \n     * @type {string}\n     * @memberof TokenResponse\n     */\n    accessToken?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof TokenResponse\n     */\n    accessTokenExpiration?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof TokenResponse\n     */\n    refreshToken?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof TokenResponse\n     */\n    refreshTokenExpiration?: string;\n}\n/**\n * \n * @export\n * @interface UpdateRouteRequest\n */\nexport interface UpdateRouteRequest {\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateRouteRequest\n     */\n    title?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateRouteRequest\n     */\n    description?: string;\n    /**\n     * \n     * @type {LineString}\n     * @memberof UpdateRouteRequest\n     */\n    path?: LineString;\n}\n\n/**\n * DefaultApi - axios parameter creator\n * @export\n */\nexport const DefaultApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @param {object} routeId \n         * @param {object} groupId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        shareInGroup(routeId: object, groupId: object, options: any = {}): RequestArgs {\n            // verify required parameter 'routeId' is not null or undefined\n            if (routeId === null || routeId === undefined) {\n                throw new RequiredError('routeId','Required parameter routeId was null or undefined when calling shareInGroup.');\n            }\n            // verify required parameter 'groupId' is not null or undefined\n            if (groupId === null || groupId === undefined) {\n                throw new RequiredError('groupId','Required parameter groupId was null or undefined when calling shareInGroup.');\n            }\n            const localVarPath = `/{routeId}/share-in-group/{groupId}`\n                .replace(`{${\"routeId\"}}`, encodeURIComponent(String(routeId)))\n                .replace(`{${\"groupId\"}}`, encodeURIComponent(String(groupId)));\n            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...options.headers};\n\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {string} [grantType] \n         * @param {string} [code] \n         * @param {string} [redirectUri] \n         * @param {string} [clientId] \n         * @param {string} [refreshToken] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        token(grantType?: string, code?: string, redirectUri?: string, clientId?: string, refreshToken?: string, options: any = {}): RequestArgs {\n            const localVarPath = `/oauth/token`;\n            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (grantType !== undefined) {\n                localVarQueryParameter['grant_type'] = grantType;\n            }\n\n            if (code !== undefined) {\n                localVarQueryParameter['code'] = code;\n            }\n\n            if (redirectUri !== undefined) {\n                localVarQueryParameter['redirect_uri'] = redirectUri;\n            }\n\n            if (clientId !== undefined) {\n                localVarQueryParameter['client_id'] = clientId;\n            }\n\n            if (refreshToken !== undefined) {\n                localVarQueryParameter['refresh_token'] = refreshToken;\n            }\n\n\n    \n            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...options.headers};\n\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * DefaultApi - functional programming interface\n * @export\n */\nexport const DefaultApiFp = function(configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @param {object} routeId \n         * @param {object} groupId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        shareInGroup(routeId: object, groupId: object, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<void> {\n            const localVarAxiosArgs = DefaultApiAxiosParamCreator(configuration).shareInGroup(routeId, groupId, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {string} [grantType] \n         * @param {string} [code] \n         * @param {string} [redirectUri] \n         * @param {string} [clientId] \n         * @param {string} [refreshToken] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        token(grantType?: string, code?: string, redirectUri?: string, clientId?: string, refreshToken?: string, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<TokenResponse> {\n            const localVarAxiosArgs = DefaultApiAxiosParamCreator(configuration).token(grantType, code, redirectUri, clientId, refreshToken, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n    }\n};\n\n/**\n * DefaultApi - factory interface\n * @export\n */\nexport const DefaultApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    return {\n        /**\n         * \n         * @param {object} routeId \n         * @param {object} groupId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        shareInGroup(routeId: object, groupId: object, options?: any) {\n            return DefaultApiFp(configuration).shareInGroup(routeId, groupId, options)(axios, basePath);\n        },\n        /**\n         * \n         * @param {string} [grantType] \n         * @param {string} [code] \n         * @param {string} [redirectUri] \n         * @param {string} [clientId] \n         * @param {string} [refreshToken] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        token(grantType?: string, code?: string, redirectUri?: string, clientId?: string, refreshToken?: string, options?: any) {\n            return DefaultApiFp(configuration).token(grantType, code, redirectUri, clientId, refreshToken, options)(axios, basePath);\n        },\n    };\n};\n\n/**\n * DefaultApi - object-oriented interface\n * @export\n * @class DefaultApi\n * @extends {BaseAPI}\n */\nexport class DefaultApi extends BaseAPI {\n    /**\n     * \n     * @param {object} routeId \n     * @param {object} groupId \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public shareInGroup(routeId: object, groupId: object, options?: any) {\n        return DefaultApiFp(this.configuration).shareInGroup(routeId, groupId, options)(this.axios, this.basePath);\n    }\n\n    /**\n     * \n     * @param {string} [grantType] \n     * @param {string} [code] \n     * @param {string} [redirectUri] \n     * @param {string} [clientId] \n     * @param {string} [refreshToken] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public token(grantType?: string, code?: string, redirectUri?: string, clientId?: string, refreshToken?: string, options?: any) {\n        return DefaultApiFp(this.configuration).token(grantType, code, redirectUri, clientId, refreshToken, options)(this.axios, this.basePath);\n    }\n\n}\n\n\n/**\n * OauthApi - axios parameter creator\n * @export\n */\nexport const OauthApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @param {string} [responseType] \n         * @param {string} [clientId] \n         * @param {string} [redirectUri] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        authorize(responseType?: string, clientId?: string, redirectUri?: string, options: any = {}): RequestArgs {\n            const localVarPath = `/oauth/authorize`;\n            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (responseType !== undefined) {\n                localVarQueryParameter['response_type'] = responseType;\n            }\n\n            if (clientId !== undefined) {\n                localVarQueryParameter['client_id'] = clientId;\n            }\n\n            if (redirectUri !== undefined) {\n                localVarQueryParameter['redirect_uri'] = redirectUri;\n            }\n\n\n    \n            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...options.headers};\n\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {LoginRequest} [loginRequest] LoginRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        login(loginRequest?: LoginRequest, options: any = {}): RequestArgs {\n            const localVarPath = `/oauth/login`;\n            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...options.headers};\n            const needsSerialization = (typeof loginRequest !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(loginRequest !== undefined ? loginRequest : {}) : (loginRequest || \"\");\n\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {string} [authorization] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        logout(authorization?: string, options: any = {}): RequestArgs {\n            const localVarPath = `/oauth/logout`;\n            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (authorization !== undefined && authorization !== null) {\n                localVarHeaderParameter['Authorization'] = String(authorization);\n            }\n\n\n    \n            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...options.headers};\n\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {InlineObject} [inlineObject] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        register(inlineObject?: InlineObject, options: any = {}): RequestArgs {\n            const localVarPath = `/oauth/register`;\n            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...options.headers};\n            const needsSerialization = (typeof inlineObject !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(inlineObject !== undefined ? inlineObject : {}) : (inlineObject || \"\");\n\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * OauthApi - functional programming interface\n * @export\n */\nexport const OauthApiFp = function(configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @param {string} [responseType] \n         * @param {string} [clientId] \n         * @param {string} [redirectUri] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        authorize(responseType?: string, clientId?: string, redirectUri?: string, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<void> {\n            const localVarAxiosArgs = OauthApiAxiosParamCreator(configuration).authorize(responseType, clientId, redirectUri, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {LoginRequest} [loginRequest] LoginRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        login(loginRequest?: LoginRequest, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<LoginResponse> {\n            const localVarAxiosArgs = OauthApiAxiosParamCreator(configuration).login(loginRequest, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {string} [authorization] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        logout(authorization?: string, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<void> {\n            const localVarAxiosArgs = OauthApiAxiosParamCreator(configuration).logout(authorization, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {InlineObject} [inlineObject] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        register(inlineObject?: InlineObject, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<void> {\n            const localVarAxiosArgs = OauthApiAxiosParamCreator(configuration).register(inlineObject, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n    }\n};\n\n/**\n * OauthApi - factory interface\n * @export\n */\nexport const OauthApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    return {\n        /**\n         * \n         * @param {string} [responseType] \n         * @param {string} [clientId] \n         * @param {string} [redirectUri] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        authorize(responseType?: string, clientId?: string, redirectUri?: string, options?: any) {\n            return OauthApiFp(configuration).authorize(responseType, clientId, redirectUri, options)(axios, basePath);\n        },\n        /**\n         * \n         * @param {LoginRequest} [loginRequest] LoginRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        login(loginRequest?: LoginRequest, options?: any) {\n            return OauthApiFp(configuration).login(loginRequest, options)(axios, basePath);\n        },\n        /**\n         * \n         * @param {string} [authorization] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        logout(authorization?: string, options?: any) {\n            return OauthApiFp(configuration).logout(authorization, options)(axios, basePath);\n        },\n        /**\n         * \n         * @param {InlineObject} [inlineObject] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        register(inlineObject?: InlineObject, options?: any) {\n            return OauthApiFp(configuration).register(inlineObject, options)(axios, basePath);\n        },\n    };\n};\n\n/**\n * OauthApi - object-oriented interface\n * @export\n * @class OauthApi\n * @extends {BaseAPI}\n */\nexport class OauthApi extends BaseAPI {\n    /**\n     * \n     * @param {string} [responseType] \n     * @param {string} [clientId] \n     * @param {string} [redirectUri] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OauthApi\n     */\n    public authorize(responseType?: string, clientId?: string, redirectUri?: string, options?: any) {\n        return OauthApiFp(this.configuration).authorize(responseType, clientId, redirectUri, options)(this.axios, this.basePath);\n    }\n\n    /**\n     * \n     * @param {LoginRequest} [loginRequest] LoginRequest\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OauthApi\n     */\n    public login(loginRequest?: LoginRequest, options?: any) {\n        return OauthApiFp(this.configuration).login(loginRequest, options)(this.axios, this.basePath);\n    }\n\n    /**\n     * \n     * @param {string} [authorization] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OauthApi\n     */\n    public logout(authorization?: string, options?: any) {\n        return OauthApiFp(this.configuration).logout(authorization, options)(this.axios, this.basePath);\n    }\n\n    /**\n     * \n     * @param {InlineObject} [inlineObject] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OauthApi\n     */\n    public register(inlineObject?: InlineObject, options?: any) {\n        return OauthApiFp(this.configuration).register(inlineObject, options)(this.axios, this.basePath);\n    }\n\n}\n\n\n/**\n * RouteApi - axios parameter creator\n * @export\n */\nexport const RouteApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @param {CreateRouteRequest} [createRouteRequest] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createRoute(createRouteRequest?: CreateRouteRequest, options: any = {}): RequestArgs {\n            const localVarPath = `/route`;\n            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...options.headers};\n            const needsSerialization = (typeof createRouteRequest !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(createRouteRequest !== undefined ? createRouteRequest : {}) : (createRouteRequest || \"\");\n\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {string} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteRouteById(id: string, options: any = {}): RequestArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling deleteRouteById.');\n            }\n            const localVarPath = `/route/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...options.headers};\n\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Your GET endpoint\n         * @param {string} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getRouteById(id: string, options: any = {}): RequestArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling getRouteById.');\n            }\n            const localVarPath = `/route/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...options.headers};\n\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {string} id \n         * @param {UpdateRouteRequest} [updateRouteRequest] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateRouteById(id: string, updateRouteRequest?: UpdateRouteRequest, options: any = {}): RequestArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling updateRouteById.');\n            }\n            const localVarPath = `/route/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...options.headers};\n            const needsSerialization = (typeof updateRouteRequest !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(updateRouteRequest !== undefined ? updateRouteRequest : {}) : (updateRouteRequest || \"\");\n\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * RouteApi - functional programming interface\n * @export\n */\nexport const RouteApiFp = function(configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @param {CreateRouteRequest} [createRouteRequest] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createRoute(createRouteRequest?: CreateRouteRequest, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<string> {\n            const localVarAxiosArgs = RouteApiAxiosParamCreator(configuration).createRoute(createRouteRequest, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {string} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteRouteById(id: string, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<void> {\n            const localVarAxiosArgs = RouteApiAxiosParamCreator(configuration).deleteRouteById(id, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary Your GET endpoint\n         * @param {string} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getRouteById(id: string, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<RouteResponse> {\n            const localVarAxiosArgs = RouteApiAxiosParamCreator(configuration).getRouteById(id, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {string} id \n         * @param {UpdateRouteRequest} [updateRouteRequest] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateRouteById(id: string, updateRouteRequest?: UpdateRouteRequest, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<void> {\n            const localVarAxiosArgs = RouteApiAxiosParamCreator(configuration).updateRouteById(id, updateRouteRequest, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n    }\n};\n\n/**\n * RouteApi - factory interface\n * @export\n */\nexport const RouteApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    return {\n        /**\n         * \n         * @param {CreateRouteRequest} [createRouteRequest] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createRoute(createRouteRequest?: CreateRouteRequest, options?: any) {\n            return RouteApiFp(configuration).createRoute(createRouteRequest, options)(axios, basePath);\n        },\n        /**\n         * \n         * @param {string} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteRouteById(id: string, options?: any) {\n            return RouteApiFp(configuration).deleteRouteById(id, options)(axios, basePath);\n        },\n        /**\n         * \n         * @summary Your GET endpoint\n         * @param {string} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getRouteById(id: string, options?: any) {\n            return RouteApiFp(configuration).getRouteById(id, options)(axios, basePath);\n        },\n        /**\n         * \n         * @param {string} id \n         * @param {UpdateRouteRequest} [updateRouteRequest] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateRouteById(id: string, updateRouteRequest?: UpdateRouteRequest, options?: any) {\n            return RouteApiFp(configuration).updateRouteById(id, updateRouteRequest, options)(axios, basePath);\n        },\n    };\n};\n\n/**\n * RouteApi - object-oriented interface\n * @export\n * @class RouteApi\n * @extends {BaseAPI}\n */\nexport class RouteApi extends BaseAPI {\n    /**\n     * \n     * @param {CreateRouteRequest} [createRouteRequest] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RouteApi\n     */\n    public createRoute(createRouteRequest?: CreateRouteRequest, options?: any) {\n        return RouteApiFp(this.configuration).createRoute(createRouteRequest, options)(this.axios, this.basePath);\n    }\n\n    /**\n     * \n     * @param {string} id \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RouteApi\n     */\n    public deleteRouteById(id: string, options?: any) {\n        return RouteApiFp(this.configuration).deleteRouteById(id, options)(this.axios, this.basePath);\n    }\n\n    /**\n     * \n     * @summary Your GET endpoint\n     * @param {string} id \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RouteApi\n     */\n    public getRouteById(id: string, options?: any) {\n        return RouteApiFp(this.configuration).getRouteById(id, options)(this.axios, this.basePath);\n    }\n\n    /**\n     * \n     * @param {string} id \n     * @param {UpdateRouteRequest} [updateRouteRequest] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RouteApi\n     */\n    public updateRouteById(id: string, updateRouteRequest?: UpdateRouteRequest, options?: any) {\n        return RouteApiFp(this.configuration).updateRouteById(id, updateRouteRequest, options)(this.axios, this.basePath);\n    }\n\n}\n\n\n","module.exports = require(\"url\");","// tslint:disable\n/**\n * swagger\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport { Configuration } from \"./configuration\";\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport globalAxios, { AxiosPromise, AxiosInstance } from 'axios';\n\nexport const BASE_PATH = \"http://localhost:3000\".replace(/\\/+$/, \"\");\n\n/**\n *\n * @export\n */\nexport const COLLECTION_FORMATS = {\n    csv: \",\",\n    ssv: \" \",\n    tsv: \"\\t\",\n    pipes: \"|\",\n};\n\n/**\n *\n * @export\n * @interface RequestArgs\n */\nexport interface RequestArgs {\n    url: string;\n    options: any;\n}\n\n/**\n *\n * @export\n * @class BaseAPI\n */\nexport class BaseAPI {\n    protected configuration: Configuration | undefined;\n\n    constructor(configuration?: Configuration, protected basePath: string = BASE_PATH, protected axios: AxiosInstance = globalAxios) {\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = configuration.basePath || this.basePath;\n        }\n    }\n};\n\n/**\n *\n * @export\n * @class RequiredError\n * @extends {Error}\n */\nexport class RequiredError extends Error {\n    name: \"RequiredError\" = \"RequiredError\";\n    constructor(public field: string, msg?: string) {\n        super(msg);\n    }\n}\n","/**\n * swagger\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport class Audit {\n    'createdBy'?: string;\n    'createdAt'?: string;\n    'modifiedBy'?: string;\n    'modifiedAt'?: string;\n\n    static discriminator: string | undefined = undefined;\n\n    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [\n        {\n            \"name\": \"createdBy\",\n            \"baseName\": \"createdBy\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"createdAt\",\n            \"baseName\": \"createdAt\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"modifiedBy\",\n            \"baseName\": \"modifiedBy\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"modifiedAt\",\n            \"baseName\": \"modifiedAt\",\n            \"type\": \"string\"\n        }    ];\n\n    static getAttributeTypeMap() {\n        return Audit.attributeTypeMap;\n    }\n}\n\n","/**\n * swagger\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { LineString } from './lineString';\n\nexport class CreateRouteRequest {\n    'title'?: string;\n    'description'?: string;\n    'path'?: LineString;\n\n    static discriminator: string | undefined = undefined;\n\n    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [\n        {\n            \"name\": \"title\",\n            \"baseName\": \"title\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"description\",\n            \"baseName\": \"description\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"path\",\n            \"baseName\": \"path\",\n            \"type\": \"LineString\"\n        }    ];\n\n    static getAttributeTypeMap() {\n        return CreateRouteRequest.attributeTypeMap;\n    }\n}\n\n","/**\n * swagger\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport class ErrorResponse {\n    'cause': string;\n    'message'?: string;\n\n    static discriminator: string | undefined = undefined;\n\n    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [\n        {\n            \"name\": \"cause\",\n            \"baseName\": \"cause\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"message\",\n            \"baseName\": \"message\",\n            \"type\": \"string\"\n        }    ];\n\n    static getAttributeTypeMap() {\n        return ErrorResponse.attributeTypeMap;\n    }\n}\n\n","/**\n * swagger\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport class InlineObject {\n    'email'?: string;\n    'password'?: string;\n\n    static discriminator: string | undefined = undefined;\n\n    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [\n        {\n            \"name\": \"email\",\n            \"baseName\": \"email\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"password\",\n            \"baseName\": \"password\",\n            \"type\": \"string\"\n        }    ];\n\n    static getAttributeTypeMap() {\n        return InlineObject.attributeTypeMap;\n    }\n}\n\n","/**\n * swagger\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport class LineString {\n    'type'?: string;\n    'coordinates'?: Array<Array<number>>;\n\n    static discriminator: string | undefined = undefined;\n\n    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [\n        {\n            \"name\": \"type\",\n            \"baseName\": \"type\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"coordinates\",\n            \"baseName\": \"coordinates\",\n            \"type\": \"Array<Array<number>>\"\n        }    ];\n\n    static getAttributeTypeMap() {\n        return LineString.attributeTypeMap;\n    }\n}\n\n","/**\n * swagger\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport class LoginRequest {\n    'email'?: string;\n    'password'?: string;\n    'clientId'?: string;\n    'redirectUri'?: string;\n\n    static discriminator: string | undefined = undefined;\n\n    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [\n        {\n            \"name\": \"email\",\n            \"baseName\": \"email\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"password\",\n            \"baseName\": \"password\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"clientId\",\n            \"baseName\": \"clientId\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"redirectUri\",\n            \"baseName\": \"redirectUri\",\n            \"type\": \"string\"\n        }    ];\n\n    static getAttributeTypeMap() {\n        return LoginRequest.attributeTypeMap;\n    }\n}\n\n","/**\n * swagger\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport class LoginResponse {\n    'code'?: string;\n    'redirectUri'?: string;\n\n    static discriminator: string | undefined = undefined;\n\n    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [\n        {\n            \"name\": \"code\",\n            \"baseName\": \"code\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"redirectUri\",\n            \"baseName\": \"redirectUri\",\n            \"type\": \"string\"\n        }    ];\n\n    static getAttributeTypeMap() {\n        return LoginResponse.attributeTypeMap;\n    }\n}\n\n","/**\n * swagger\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { Audit } from './audit';\nimport { LineString } from './lineString';\n\nexport class RouteResponse {\n    'title'?: string;\n    'description'?: string;\n    'path'?: LineString;\n    'audit'?: Audit;\n\n    static discriminator: string | undefined = undefined;\n\n    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [\n        {\n            \"name\": \"title\",\n            \"baseName\": \"title\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"description\",\n            \"baseName\": \"description\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"path\",\n            \"baseName\": \"path\",\n            \"type\": \"LineString\"\n        },\n        {\n            \"name\": \"audit\",\n            \"baseName\": \"audit\",\n            \"type\": \"Audit\"\n        }    ];\n\n    static getAttributeTypeMap() {\n        return RouteResponse.attributeTypeMap;\n    }\n}\n\n","/**\n * swagger\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport class TokenResponse {\n    'accessToken'?: string;\n    'accessTokenExpiration'?: string;\n    'refreshToken'?: string;\n    'refreshTokenExpiration'?: string;\n\n    static discriminator: string | undefined = undefined;\n\n    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [\n        {\n            \"name\": \"accessToken\",\n            \"baseName\": \"accessToken\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"accessTokenExpiration\",\n            \"baseName\": \"accessTokenExpiration\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"refreshToken\",\n            \"baseName\": \"refreshToken\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"refreshTokenExpiration\",\n            \"baseName\": \"refreshTokenExpiration\",\n            \"type\": \"string\"\n        }    ];\n\n    static getAttributeTypeMap() {\n        return TokenResponse.attributeTypeMap;\n    }\n}\n\n","/**\n * swagger\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { LineString } from './lineString';\n\nexport class UpdateRouteRequest {\n    'title'?: string;\n    'description'?: string;\n    'path'?: LineString;\n\n    static discriminator: string | undefined = undefined;\n\n    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [\n        {\n            \"name\": \"title\",\n            \"baseName\": \"title\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"description\",\n            \"baseName\": \"description\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"path\",\n            \"baseName\": \"path\",\n            \"type\": \"LineString\"\n        }    ];\n\n    static getAttributeTypeMap() {\n        return UpdateRouteRequest.attributeTypeMap;\n    }\n}\n\n"],"sourceRoot":""}