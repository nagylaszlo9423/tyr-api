{"version":3,"sources":["webpack://tyr-map/webpack/universalModuleDefinition","webpack://tyr-map/webpack/bootstrap","webpack://tyr-map/./src/rxjs/runtime.ts","webpack://tyr-map/./src/rxjs/apis/index.ts","webpack://tyr-map/./src/index.ts","webpack://tyr-map/./src/rxjs/apis/DefaultApi.ts","webpack://tyr-map/external \"rxjs\"","webpack://tyr-map/external \"rxjs/ajax\"","webpack://tyr-map/external \"rxjs/operators\"","webpack://tyr-map/./src/rxjs/apis/GroupApi.ts","webpack://tyr-map/./src/rxjs/apis/OauthApi.ts","webpack://tyr-map/./src/rxjs/apis/RouteApi.ts"],"names":["root","factory","exports","module","define","amd","global","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","BASE_PATH","replace","configuration","this","basePath","middleware","username","password","apiKey","accessToken","Configuration","withMiddleware","middlewares","next","clone","concat","withPreMiddleware","preMiddlewares","map","pre","withPostMiddleware","postMiddlewares","post","request","requestOpts","rxjsRequest","createRequestArgs","pipe","res","status","response","url","path","undefined","query","keys","length","queryString","method","headers","body","FormData","JSON","stringify","responseType","params","of","filter","item","forEach","mw","concatMap","args","ajax","assign","getPrototypeOf","BaseAPI","Error","RequiredError","COLLECTION_FORMATS","csv","ssv","tsv","pipes","encodeURI","encodeURIComponent","String","Array","val","join","querystring","throwIfRequired","nickname","throwIfNullOrUndefined","rxjsTyrApi","postOauthLogoutAll","logoutRequest","DefaultApi","require","createGroupOp","groupRequest","findByIdOp","groupId","getGroupsPagedOp","page","size","groupGroupIdDelete","joinGroupOp","leaveGroupOp","updateGroupOp","GroupApi","authorizeOp","clientId","redirectUri","loginOp","loginRequest","logoutOp","authorization","registerOp","registrationRequest","tokenOp","grantType","code","refreshToken","OauthApi","createRouteOp","createRouteRequest","deleteRouteById","id","getMostPopularRoutesOp","getRouteByIdOp","shareInGroupOp","routeId","updateRouteByIdOp","updateRouteRequest","RouteApi"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"tyr-map\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"tyr-map\"] = factory();\n\telse\n\t\troot[\"tyr-map\"] = factory();\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","// tslint:disable\n/**\n * swagger\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { Observable, of } from 'rxjs';\nimport { ajax, AjaxRequest, AjaxResponse } from 'rxjs/ajax';\nimport { map, concatMap } from 'rxjs/operators';\n\nexport const BASE_PATH = 'http://localhost:3001'.replace(/\\/+$/, '');\n\nexport interface ConfigurationParameters {\n    basePath?: string; // override base path\n    middleware?: Middleware[]; // middleware to apply before/after rxjs requests\n    username?: string; // parameter for basic security\n    password?: string; // parameter for basic security\n    apiKey?: string | ((name: string) => string); // parameter for apiKey security\n    accessToken?: string | ((name?: string, scopes?: string[]) => string); // parameter for oauth2 security\n}\n\nexport class Configuration {\n    constructor(private configuration: ConfigurationParameters = {}) {}\n\n    get basePath(): string {\n        return this.configuration.basePath || BASE_PATH;\n    }\n\n    get middleware(): Middleware[] {\n        return this.configuration.middleware || [];\n    }\n\n    get username(): string | undefined {\n        return this.configuration.username;\n    }\n\n    get password(): string | undefined {\n        return this.configuration.password;\n    }\n\n    get apiKey(): ((name: string) => string) | undefined {\n        const apiKey = this.configuration.apiKey;\n        return apiKey && (typeof apiKey === 'function' ? apiKey : () => apiKey);\n    }\n\n    get accessToken(): ((name: string, scopes?: string[]) => string) | undefined {\n        const accessToken = this.configuration.accessToken;\n        return accessToken && (typeof accessToken === 'function' ? accessToken : () => accessToken);\n    }\n}\n\n/**\n * This is the base class for all generated API classes.\n */\nexport class BaseAPI {\n    private middleware: Middleware[] = [];\n\n    constructor(protected configuration = new Configuration()) {\n        this.middleware = configuration.middleware;\n    }\n\n    withMiddleware = (middlewares: Middleware[]) => {\n        const next = this.clone();\n        next.middleware = next.middleware.concat(middlewares);\n        return next;\n    };\n\n    withPreMiddleware = (preMiddlewares: Array<Middleware['pre']>) =>\n        this.withMiddleware(preMiddlewares.map((pre) => ({ pre })));\n\n    withPostMiddleware = (postMiddlewares: Array<Middleware['post']>) =>\n        this.withMiddleware(postMiddlewares.map((post) => ({ post })));\n\n    protected request = <T>(requestOpts: RequestOpts): Observable<T> =>\n        this.rxjsRequest(this.createRequestArgs(requestOpts)).pipe(\n            map((res) => {\n                if (res.status >= 200 && res.status < 300) {\n                    return res.response as T;\n                }\n                throw res;\n            })\n        );\n\n    private createRequestArgs = (requestOpts: RequestOpts): RequestArgs => {\n        let url = this.configuration.basePath + requestOpts.path;\n        if (requestOpts.query !== undefined && Object.keys(requestOpts.query).length !== 0) {\n            // only add the queryString to the URL if there are query parameters.\n            // this is done to avoid urls ending with a '?' character which buggy webservers\n            // do not handle correctly sometimes.\n            url += '?' + queryString(requestOpts.query);\n        }\n\n        return {\n            url,\n            method: requestOpts.method,\n            headers: requestOpts.headers,\n            body: requestOpts.body instanceof FormData ? requestOpts.body : JSON.stringify(requestOpts.body),\n            responseType: requestOpts.responseType || 'json',\n        };\n    }\n\n    private rxjsRequest = (params: RequestArgs): Observable<AjaxResponse> =>\n        of(params).pipe(\n            map((request) => {\n                this.middleware.filter((item) => item.pre).forEach((mw) => (request = mw.pre!(request)));\n                return request;\n            }),\n            concatMap((args) =>\n                ajax(args).pipe(\n                    map((response) => {\n                        this.middleware.filter((item) => item.post).forEach((mw) => (response = mw.post!(response)));\n                        return response;\n                    })\n                )\n            )\n        );\n\n    /**\n     * Create a shallow clone of `this` by constructing a new instance\n     * and then shallow cloning data members.\n     */\n    private clone = (): BaseAPI =>\n        Object.assign(Object.create(Object.getPrototypeOf(this)), this);\n}\n\n/**\n * @deprecated\n * export for not being a breaking change\n */\nexport class RequiredError extends Error {\n    name: 'RequiredError' = 'RequiredError';\n}\n\nexport const COLLECTION_FORMATS = {\n    csv: ',',\n    ssv: ' ',\n    tsv: '\\t',\n    pipes: '|',\n};\n\nexport type Json = any;\nexport type HttpMethod = 'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE' | 'OPTIONS' | 'HEAD';\nexport type HttpHeaders = { [key: string]: string };\nexport type HttpQuery = Partial<{ [key: string]: string | number | null | boolean | Array<string | number | null | boolean> }>; // partial is needed for strict mode\nexport type HttpBody = Json | FormData;\n\nexport interface RequestOpts {\n    path: string;\n    method: HttpMethod;\n    headers?: HttpHeaders;\n    query?: HttpQuery;\n    body?: HttpBody;\n    responseType?: 'json' | 'blob' | 'arraybuffer' | 'text';\n}\n\nexport const encodeURI = (value: any) => encodeURIComponent(String(value));\n\nconst queryString = (params: HttpQuery): string => Object.keys(params)\n    .map((key) => {\n        const value = params[key];\n        return (value instanceof Array)\n            ? value.map((val) => `${encodeURI(key)}=${encodeURI(val)}`).join('&')\n            : `${encodeURI(key)}=${encodeURI(value)}`;\n    })\n    .join('&');\n\n// alias fallback for not being a breaking change\nexport const querystring = queryString;\n\n/**\n * @deprecated\n */\nexport const throwIfRequired = (params: {[key: string]: any}, key: string, nickname: string) => {\n    if (!params || params[key] == null) {\n        throw new RequiredError(`Required parameter ${key} was null or undefined when calling ${nickname}.`);\n    }\n};\n\nexport const throwIfNullOrUndefined = (value: any, nickname?: string) => {\n    if (value == null) {\n        throw new Error(`Parameter \"${value}\" was null or undefined when calling \"${nickname}\".`);\n    }\n};\n\n// alias for easier importing\nexport interface RequestArgs extends AjaxRequest {}\nexport interface ResponseArgs extends AjaxResponse {}\n\nexport interface Middleware {\n    pre?(request: RequestArgs): RequestArgs;\n    post?(response: ResponseArgs): ResponseArgs;\n}\n","export * from './DefaultApi';\r\nexport * from './GroupApi';\r\nexport * from './index';\r\nexport * from './OauthApi';\r\nexport * from './RouteApi';\r\n","import * as rxjsTyrApi from './rxjs/apis';\r\nexport default rxjsTyrApi;\r\n","// tslint:disable\n/**\n * swagger\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { Observable } from 'rxjs';\nimport { BaseAPI, HttpHeaders } from '../runtime';\nimport {\n    LogoutRequest,\n} from '../models';\n\nexport interface PostOauthLogoutAllRequest {\n    logoutRequest?: LogoutRequest;\n}\n\n/**\n * no description\n */\nexport class DefaultApi extends BaseAPI {\n\n    /**\n     */\n    postOauthLogoutAll = ({ logoutRequest }: PostOauthLogoutAllRequest): Observable<void> => {\n\n        const headers: HttpHeaders = {\n            'Content-Type': 'application/json',\n        };\n\n        return this.request<void>({\n            path: '/oauth/logout/all',\n            method: 'POST',\n            headers,\n            body: logoutRequest,\n        });\n    };\n\n}\n","module.exports = require(\"rxjs\");","module.exports = require(\"rxjs/ajax\");","module.exports = require(\"rxjs/operators\");","// tslint:disable\n/**\n * swagger\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { Observable } from 'rxjs';\nimport { BaseAPI, HttpHeaders, HttpQuery, throwIfNullOrUndefined, encodeURI } from '../runtime';\nimport {\n    ErrorResponse,\n    GroupPageResponse,\n    GroupRequest,\n    GroupResponse,\n} from '../models';\n\nexport interface CreateGroupOpRequest {\n    groupRequest?: GroupRequest;\n}\n\nexport interface FindByIdOpRequest {\n    groupId: string;\n}\n\nexport interface GetGroupsPagedOpRequest {\n    page?: number;\n    size?: number;\n}\n\nexport interface GroupGroupIdDeleteRequest {\n    groupId: string;\n}\n\nexport interface JoinGroupOpRequest {\n    groupId: string;\n}\n\nexport interface LeaveGroupOpRequest {\n    groupId: string;\n}\n\nexport interface UpdateGroupOpRequest {\n    groupId: string;\n    groupRequest?: GroupRequest;\n}\n\n/**\n * no description\n */\nexport class GroupApi extends BaseAPI {\n\n    /**\n     * createGroup\n     */\n    createGroupOp = ({ groupRequest }: CreateGroupOpRequest): Observable<string> => {\n\n        const headers: HttpHeaders = {\n            'Content-Type': 'application/json',\n        };\n\n        return this.request<string>({\n            path: '/group',\n            method: 'POST',\n            headers,\n            body: groupRequest,\n        });\n    };\n\n    /**\n     * findById\n     */\n    findByIdOp = ({ groupId }: FindByIdOpRequest): Observable<GroupResponse> => {\n        throwIfNullOrUndefined(groupId, 'findByIdOp');\n\n        return this.request<GroupResponse>({\n            path: '/group/{groupId}'.replace('{groupId}', encodeURI(groupId)),\n            method: 'GET',\n        });\n    };\n\n    /**\n     * getGroupsPaged\n     */\n    getGroupsPagedOp = ({ page, size }: GetGroupsPagedOpRequest): Observable<GroupPageResponse> => {\n\n        const query: HttpQuery = {};\n\n        if (page != null) { query['page'] = page; }\n        if (size != null) { query['size'] = size; }\n\n        return this.request<GroupPageResponse>({\n            path: '/group/page',\n            method: 'GET',\n            query,\n        });\n    };\n\n    /**\n     */\n    groupGroupIdDelete = ({ groupId }: GroupGroupIdDeleteRequest): Observable<void> => {\n        throwIfNullOrUndefined(groupId, 'groupGroupIdDelete');\n\n        return this.request<void>({\n            path: '/group/{groupId}'.replace('{groupId}', encodeURI(groupId)),\n            method: 'DELETE',\n        });\n    };\n\n    /**\n     * joinGroup\n     */\n    joinGroupOp = ({ groupId }: JoinGroupOpRequest): Observable<void> => {\n        throwIfNullOrUndefined(groupId, 'joinGroupOp');\n\n        return this.request<void>({\n            path: '/group/{groupId}/join'.replace('{groupId}', encodeURI(groupId)),\n            method: 'POST',\n        });\n    };\n\n    /**\n     * leaveGroup\n     */\n    leaveGroupOp = ({ groupId }: LeaveGroupOpRequest): Observable<void> => {\n        throwIfNullOrUndefined(groupId, 'leaveGroupOp');\n\n        return this.request<void>({\n            path: '/group/{groupId}/leave'.replace('{groupId}', encodeURI(groupId)),\n            method: 'POST',\n        });\n    };\n\n    /**\n     * updateGroup\n     */\n    updateGroupOp = ({ groupId, groupRequest }: UpdateGroupOpRequest): Observable<void> => {\n        throwIfNullOrUndefined(groupId, 'updateGroupOp');\n\n        const headers: HttpHeaders = {\n            'Content-Type': 'application/json',\n        };\n\n        return this.request<void>({\n            path: '/group/{groupId}'.replace('{groupId}', encodeURI(groupId)),\n            method: 'PUT',\n            headers,\n            body: groupRequest,\n        });\n    };\n\n}\n","// tslint:disable\n/**\n * swagger\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { Observable } from 'rxjs';\nimport { BaseAPI, HttpHeaders, HttpQuery } from '../runtime';\nimport {\n    LoginRequest,\n    LoginResponse,\n    LogoutRequest,\n    RegistrationRequest,\n    RegistrationResponse,\n    TokenResponse,\n} from '../models';\n\nexport interface AuthorizeOpRequest {\n    responseType?: string;\n    clientId?: string;\n    redirectUri?: string;\n}\n\nexport interface LoginOpRequest {\n    loginRequest?: LoginRequest;\n}\n\nexport interface LogoutOpRequest {\n    authorization?: string;\n}\n\nexport interface RegisterOpRequest {\n    registrationRequest?: RegistrationRequest;\n}\n\nexport interface TokenOpRequest {\n    grantType?: string;\n    code?: string;\n    redirectUri?: string;\n    clientId?: string;\n    refreshToken?: string;\n}\n\n/**\n * no description\n */\nexport class OauthApi extends BaseAPI {\n\n    /**\n     */\n    authorizeOp = ({ responseType, clientId, redirectUri }: AuthorizeOpRequest): Observable<void> => {\n\n        const query: HttpQuery = {};\n\n        if (responseType != null) { query['response_type'] = responseType; }\n        if (clientId != null) { query['client_id'] = clientId; }\n        if (redirectUri != null) { query['redirect_uri'] = redirectUri; }\n\n        return this.request<void>({\n            path: '/oauth/authorize',\n            method: 'POST',\n            query,\n        });\n    };\n\n    /**\n     */\n    loginOp = ({ loginRequest }: LoginOpRequest): Observable<LoginResponse> => {\n\n        const headers: HttpHeaders = {\n            'Content-Type': 'application/json',\n        };\n\n        return this.request<LoginResponse>({\n            path: '/oauth/login',\n            method: 'POST',\n            headers,\n            body: loginRequest,\n        });\n    };\n\n    /**\n     */\n    logoutOp = ({ authorization }: LogoutOpRequest): Observable<LogoutRequest> => {\n\n        const headers: HttpHeaders = {\n            ...(authorization != null ? { 'Authorization': String(authorization) } : undefined),\n        };\n\n        return this.request<LogoutRequest>({\n            path: '/oauth/logout',\n            method: 'POST',\n            headers,\n        });\n    };\n\n    /**\n     */\n    registerOp = ({ registrationRequest }: RegisterOpRequest): Observable<RegistrationResponse> => {\n\n        const headers: HttpHeaders = {\n            'Content-Type': 'application/json',\n        };\n\n        return this.request<RegistrationResponse>({\n            path: '/oauth/register',\n            method: 'POST',\n            headers,\n            body: registrationRequest,\n        });\n    };\n\n    /**\n     */\n    tokenOp = ({ grantType, code, redirectUri, clientId, refreshToken }: TokenOpRequest): Observable<TokenResponse> => {\n\n        const query: HttpQuery = {};\n\n        if (grantType != null) { query['grant_type'] = grantType; }\n        if (code != null) { query['code'] = code; }\n        if (redirectUri != null) { query['redirect_uri'] = redirectUri; }\n        if (clientId != null) { query['client_id'] = clientId; }\n        if (refreshToken != null) { query['refresh_token'] = refreshToken; }\n\n        return this.request<TokenResponse>({\n            path: '/oauth/token',\n            method: 'POST',\n            query,\n        });\n    };\n\n}\n","// tslint:disable\n/**\n * swagger\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { Observable } from 'rxjs';\nimport { BaseAPI, HttpHeaders, throwIfNullOrUndefined, encodeURI } from '../runtime';\nimport {\n    CreateRouteRequest,\n    ErrorResponse,\n    RouteResponse,\n    UpdateRouteRequest,\n} from '../models';\n\nexport interface CreateRouteOpRequest {\n    createRouteRequest?: CreateRouteRequest;\n}\n\nexport interface DeleteRouteByIdRequest {\n    id: string;\n}\n\nexport interface GetRouteByIdOpRequest {\n    id: string;\n}\n\nexport interface ShareInGroupOpRequest {\n    routeId: string;\n    groupId: string;\n}\n\nexport interface UpdateRouteByIdOpRequest {\n    id: string;\n    updateRouteRequest?: UpdateRouteRequest;\n}\n\n/**\n * no description\n */\nexport class RouteApi extends BaseAPI {\n\n    /**\n     */\n    createRouteOp = ({ createRouteRequest }: CreateRouteOpRequest): Observable<string> => {\n\n        const headers: HttpHeaders = {\n            'Content-Type': 'application/json',\n        };\n\n        return this.request<string>({\n            path: '/route',\n            method: 'POST',\n            headers,\n            body: createRouteRequest,\n        });\n    };\n\n    /**\n     */\n    deleteRouteById = ({ id }: DeleteRouteByIdRequest): Observable<void> => {\n        throwIfNullOrUndefined(id, 'deleteRouteById');\n\n        return this.request<void>({\n            path: '/route/{id}'.replace('{id}', encodeURI(id)),\n            method: 'DELETE',\n        });\n    };\n\n    /**\n     * mostPopularRoutes\n     */\n    getMostPopularRoutesOp = (): Observable<Array<RouteResponse>> => {\n        return this.request<Array<RouteResponse>>({\n            path: '/route/most-popular',\n            method: 'GET',\n        });\n    };\n\n    /**\n     * Your GET endpoint\n     */\n    getRouteByIdOp = ({ id }: GetRouteByIdOpRequest): Observable<RouteResponse> => {\n        throwIfNullOrUndefined(id, 'getRouteByIdOp');\n\n        return this.request<RouteResponse>({\n            path: '/route/{id}'.replace('{id}', encodeURI(id)),\n            method: 'GET',\n        });\n    };\n\n    /**\n     */\n    shareInGroupOp = ({ routeId, groupId }: ShareInGroupOpRequest): Observable<void> => {\n        throwIfNullOrUndefined(routeId, 'shareInGroupOp');\n        throwIfNullOrUndefined(groupId, 'shareInGroupOp');\n\n        return this.request<void>({\n            path: '/route/{routeId}/share-in-group/{groupId}'.replace('{routeId}', encodeURI(routeId)).replace('{groupId}', encodeURI(groupId)),\n            method: 'POST',\n        });\n    };\n\n    /**\n     */\n    updateRouteByIdOp = ({ id, updateRouteRequest }: UpdateRouteByIdOpRequest): Observable<void> => {\n        throwIfNullOrUndefined(id, 'updateRouteByIdOp');\n\n        const headers: HttpHeaders = {\n            'Content-Type': 'application/json',\n        };\n\n        return this.request<void>({\n            path: '/route/{id}'.replace('{id}', encodeURI(id)),\n            method: 'PUT',\n            headers,\n            body: updateRouteRequest,\n        });\n    };\n\n}\n"],"sourceRoot":""}