{"version":3,"sources":["webpack://tyr-map/webpack/universalModuleDefinition","webpack://tyr-map/webpack/bootstrap","webpack://tyr-map/external \"axios\"","webpack://tyr-map/./src/index.ts","webpack://tyr-map/./src/axios/api.ts","webpack://tyr-map/external \"url\"","webpack://tyr-map/./src/axios/base.ts","webpack://tyr-map/./src/node/model/auditDto.ts","webpack://tyr-map/./src/node/model/createGroupRequest.ts","webpack://tyr-map/./src/node/model/createRouteRequest.ts","webpack://tyr-map/./src/node/model/errorResponse.ts","webpack://tyr-map/./src/node/model/groupResponse.ts","webpack://tyr-map/./src/node/model/lineStringDto.ts","webpack://tyr-map/./src/node/model/loginRequest.ts","webpack://tyr-map/./src/node/model/loginResponse.ts","webpack://tyr-map/./src/node/model/registrationRequest.ts","webpack://tyr-map/./src/node/model/registrationResponse.ts","webpack://tyr-map/./src/node/model/routeResponse.ts","webpack://tyr-map/./src/node/model/tokenResponse.ts","webpack://tyr-map/./src/node/model/updateGroupRequest.ts","webpack://tyr-map/./src/node/model/updateRouteRequest.ts"],"names":["root","factory","exports","module","define","amd","global","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","AxiosApi","axiosApi","GroupApiAxiosParamCreator","configuration","createGroup","createGroupRequest","options","baseOptions","localVarUrlObj","globalImportUrl","parse","localVarRequestOptions","method","localVarHeaderParameter","query","search","headers","needsSerialization","data","JSON","stringify","undefined","url","format","findById","groupId","RequiredError","localVarPath","replace","encodeURIComponent","String","groupGroupIdDelete","joinGroup","leaveGroup","updateGroup","updateGroupRequest","GroupApiFp","localVarAxiosArgs","axios","basePath","BASE_PATH","axiosRequestArgs","request","GroupApiFactory","this","BaseAPI","GroupApi","OauthApiAxiosParamCreator","authorize","responseType","clientId","redirectUri","localVarQueryParameter","login","loginRequest","logout","authorization","register","registrationRequest","token","grantType","code","refreshToken","OauthApiFp","OauthApiFactory","OauthApi","RouteApiAxiosParamCreator","createRoute","createRouteRequest","deleteRouteById","id","getRouteById","shareInGroup","routeId","updateRouteById","updateRouteRequest","RouteApiFp","RouteApiFactory","RouteApi","COLLECTION_FORMATS","csv","ssv","tsv","pipes","field","msg","Error","getAttributeTypeMap","AuditDto","attributeTypeMap","discriminator","CreateGroupRequest","CreateRouteRequest","ErrorResponse","GroupResponse","LineStringDto","LoginRequest","LoginResponse","RegistrationRequest","RegistrationResponse","RouteResponse","TokenResponse","UpdateGroupRequest","UpdateRouteRequest"],"mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,UAAW,GAAIH,GACI,iBAAZC,QACdA,QAAQ,WAAaD,IAErBD,EAAK,WAAaC,IARpB,CASGK,QAAQ,WACX,O,YCTE,IAAIC,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUP,QAGnC,IAAIC,EAASI,EAAiBE,GAAY,CACzCC,EAAGD,EACHE,GAAG,EACHT,QAAS,IAUV,OANAU,EAAQH,GAAUI,KAAKV,EAAOD,QAASC,EAAQA,EAAOD,QAASM,GAG/DL,EAAOQ,GAAI,EAGJR,EAAOD,QA0Df,OArDAM,EAAoBM,EAAIF,EAGxBJ,EAAoBO,EAAIR,EAGxBC,EAAoBQ,EAAI,SAASd,EAASe,EAAMC,GAC3CV,EAAoBW,EAAEjB,EAASe,IAClCG,OAAOC,eAAenB,EAASe,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEV,EAAoBgB,EAAI,SAAStB,GACX,oBAAXuB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAenB,EAASuB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAenB,EAAS,aAAc,CAAEyB,OAAO,KAQvDnB,EAAoBoB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQnB,EAAoBmB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFAxB,EAAoBgB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOnB,EAAoBQ,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRvB,EAAoB2B,EAAI,SAAShC,GAChC,IAAIe,EAASf,GAAUA,EAAO2B,WAC7B,WAAwB,OAAO3B,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAK,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG7B,EAAoBgC,EAAI,GAIjBhC,EAAoBA,EAAoBiC,EAAI,G,gBClFrDtC,EAAOD,QAAUwC,QAAQ,U,4ICAzB,WACa,EAAAC,SAAWC,EACxB,QACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,U,koBCDA,WAEA,OAGA,OAyVa,EAAAC,0BAA4B,SAAUC,GAC/C,MAAO,CAQHC,YAAA,SAAYC,EAAyCC,QAAA,IAAAA,MAAA,IACjD,IAEIC,EADEC,EAAiBC,EAAgBC,MADlB,UACsC,GAEvDP,IACAI,EAAcJ,EAAcI,aAEhC,IAAMI,EAAyB,EAAH,GAAKC,OAAQ,QAAWL,GAAgBD,GAC9DO,EAA0B,GAKhCA,EAAwB,gBAAkB,mBAE1CL,EAAeM,MAAQ,EAAH,OAAON,EAAeM,OANX,IAMgDR,EAAQQ,cAEhFN,EAAeO,OACtBJ,EAAuBK,QAAU,EAAH,KAAOH,GAA4BP,EAAQU,SACzE,IAAMC,EAAoD,iBAAvBZ,GAAuF,qBAAnDM,EAAuBK,QAAQ,gBAGtG,OAFAL,EAAuBO,KAAQD,EAAqBE,KAAKC,eAAiCC,IAAvBhB,EAAmCA,EAAqB,IAAOA,GAAsB,GAEjJ,CACHiB,IAAKb,EAAgBc,OAAOf,GAC5BF,QAASK,IAUjBa,SAAA,SAASC,EAAiBnB,GAEtB,QAFsB,IAAAA,MAAA,IAElBmB,QACA,MAAM,IAAI,EAAAC,cAAc,UAAU,2EAEtC,IAGInB,EAHEoB,EAAe,mBAChBC,QAAQ,YAAkBC,mBAAmBC,OAAOL,KACnDjB,EAAiBC,EAAgBC,MAAMiB,GAAc,GAEvDxB,IACAI,EAAcJ,EAAcI,aAEhC,IAAMI,EAAyB,EAAH,GAAKC,OAAQ,OAAUL,GAAgBD,GAWnE,OALAE,EAAeM,MAAQ,EAAH,OAAON,EAAeM,OAJX,IAIgDR,EAAQQ,cAEhFN,EAAeO,OACtBJ,EAAuBK,QAAU,EAAH,KARE,IAQiCV,EAAQU,SAElE,CACHM,IAAKb,EAAgBc,OAAOf,GAC5BF,QAASK,IASjBoB,mBAAA,SAAmBN,EAAiBnB,GAEhC,QAFgC,IAAAA,MAAA,IAE5BmB,QACA,MAAM,IAAI,EAAAC,cAAc,UAAU,qFAEtC,IAGInB,EAHEoB,EAAe,mBAChBC,QAAQ,YAAkBC,mBAAmBC,OAAOL,KACnDjB,EAAiBC,EAAgBC,MAAMiB,GAAc,GAEvDxB,IACAI,EAAcJ,EAAcI,aAEhC,IAAMI,EAAyB,EAAH,GAAKC,OAAQ,UAAaL,GAAgBD,GAWtE,OALAE,EAAeM,MAAQ,EAAH,OAAON,EAAeM,OAJX,IAIgDR,EAAQQ,cAEhFN,EAAeO,OACtBJ,EAAuBK,QAAU,EAAH,KARE,IAQiCV,EAAQU,SAElE,CACHM,IAAKb,EAAgBc,OAAOf,GAC5BF,QAASK,IAUjBqB,UAAA,SAAUP,EAAiBnB,GAEvB,QAFuB,IAAAA,MAAA,IAEnBmB,QACA,MAAM,IAAI,EAAAC,cAAc,UAAU,4EAEtC,IAGInB,EAHEoB,EAAe,wBAChBC,QAAQ,YAAkBC,mBAAmBC,OAAOL,KACnDjB,EAAiBC,EAAgBC,MAAMiB,GAAc,GAEvDxB,IACAI,EAAcJ,EAAcI,aAEhC,IAAMI,EAAyB,EAAH,GAAKC,OAAQ,QAAWL,GAAgBD,GAWpE,OALAE,EAAeM,MAAQ,EAAH,OAAON,EAAeM,OAJX,IAIgDR,EAAQQ,cAEhFN,EAAeO,OACtBJ,EAAuBK,QAAU,EAAH,KARE,IAQiCV,EAAQU,SAElE,CACHM,IAAKb,EAAgBc,OAAOf,GAC5BF,QAASK,IAUjBsB,WAAA,SAAWR,EAAiBnB,GAExB,QAFwB,IAAAA,MAAA,IAEpBmB,QACA,MAAM,IAAI,EAAAC,cAAc,UAAU,6EAEtC,IAGInB,EAHEoB,EAAe,yBAChBC,QAAQ,YAAkBC,mBAAmBC,OAAOL,KACnDjB,EAAiBC,EAAgBC,MAAMiB,GAAc,GAEvDxB,IACAI,EAAcJ,EAAcI,aAEhC,IAAMI,EAAyB,EAAH,GAAKC,OAAQ,QAAWL,GAAgBD,GAWpE,OALAE,EAAeM,MAAQ,EAAH,OAAON,EAAeM,OAJX,IAIgDR,EAAQQ,cAEhFN,EAAeO,OACtBJ,EAAuBK,QAAU,EAAH,KARE,IAQiCV,EAAQU,SAElE,CACHM,IAAKb,EAAgBc,OAAOf,GAC5BF,QAASK,IAWjBuB,YAAA,SAAYT,EAAiBU,EAAyC7B,GAElE,QAFkE,IAAAA,MAAA,IAE9DmB,QACA,MAAM,IAAI,EAAAC,cAAc,UAAU,8EAEtC,IAGInB,EAHEoB,EAAe,mBAChBC,QAAQ,YAAkBC,mBAAmBC,OAAOL,KACnDjB,EAAiBC,EAAgBC,MAAMiB,GAAc,GAEvDxB,IACAI,EAAcJ,EAAcI,aAEhC,IAAMI,EAAyB,EAAH,GAAKC,OAAQ,OAAUL,GAAgBD,GAC7DO,EAA0B,GAKhCA,EAAwB,gBAAkB,mBAE1CL,EAAeM,MAAQ,EAAH,OAAON,EAAeM,OANX,IAMgDR,EAAQQ,cAEhFN,EAAeO,OACtBJ,EAAuBK,QAAU,EAAH,KAAOH,GAA4BP,EAAQU,SACzE,IAAMC,EAAoD,iBAAvBkB,GAAuF,qBAAnDxB,EAAuBK,QAAQ,gBAGtG,OAFAL,EAAuBO,KAAQD,EAAqBE,KAAKC,eAAiCC,IAAvBc,EAAmCA,EAAqB,IAAOA,GAAsB,GAEjJ,CACHb,IAAKb,EAAgBc,OAAOf,GAC5BF,QAASK,MAUZ,EAAAyB,WAAa,SAASjC,GAC/B,MAAO,CAQHC,YAAA,SAAYC,EAAyCC,GACjD,IAAM+B,EAAoB,EAAAnC,0BAA0BC,GAAeC,YAAYC,EAAoBC,GACnG,OAAO,SAACgC,EAAoCC,QAApC,IAAAD,MAAuB,gBAAa,IAAAC,MAAmB,EAAAC,WAC3D,IAAMC,EAAmB,EAAH,KAAOJ,EAAkB/B,SAAO,CAAEgB,IAAKiB,EAAWF,EAAkBf,MAC1F,OAAOgB,EAAMI,QAAQD,KAU7BjB,SAAA,SAASC,EAAiBnB,GACtB,IAAM+B,EAAoB,EAAAnC,0BAA0BC,GAAeqB,SAASC,EAASnB,GACrF,OAAO,SAACgC,EAAoCC,QAApC,IAAAD,MAAuB,gBAAa,IAAAC,MAAmB,EAAAC,WAC3D,IAAMC,EAAmB,EAAH,KAAOJ,EAAkB/B,SAAO,CAAEgB,IAAKiB,EAAWF,EAAkBf,MAC1F,OAAOgB,EAAMI,QAAQD,KAS7BV,mBAAA,SAAmBN,EAAiBnB,GAChC,IAAM+B,EAAoB,EAAAnC,0BAA0BC,GAAe4B,mBAAmBN,EAASnB,GAC/F,OAAO,SAACgC,EAAoCC,QAApC,IAAAD,MAAuB,gBAAa,IAAAC,MAAmB,EAAAC,WAC3D,IAAMC,EAAmB,EAAH,KAAOJ,EAAkB/B,SAAO,CAAEgB,IAAKiB,EAAWF,EAAkBf,MAC1F,OAAOgB,EAAMI,QAAQD,KAU7BT,UAAA,SAAUP,EAAiBnB,GACvB,IAAM+B,EAAoB,EAAAnC,0BAA0BC,GAAe6B,UAAUP,EAASnB,GACtF,OAAO,SAACgC,EAAoCC,QAApC,IAAAD,MAAuB,gBAAa,IAAAC,MAAmB,EAAAC,WAC3D,IAAMC,EAAmB,EAAH,KAAOJ,EAAkB/B,SAAO,CAAEgB,IAAKiB,EAAWF,EAAkBf,MAC1F,OAAOgB,EAAMI,QAAQD,KAU7BR,WAAA,SAAWR,EAAiBnB,GACxB,IAAM+B,EAAoB,EAAAnC,0BAA0BC,GAAe8B,WAAWR,EAASnB,GACvF,OAAO,SAACgC,EAAoCC,QAApC,IAAAD,MAAuB,gBAAa,IAAAC,MAAmB,EAAAC,WAC3D,IAAMC,EAAmB,EAAH,KAAOJ,EAAkB/B,SAAO,CAAEgB,IAAKiB,EAAWF,EAAkBf,MAC1F,OAAOgB,EAAMI,QAAQD,KAW7BP,YAAA,SAAYT,EAAiBU,EAAyC7B,GAClE,IAAM+B,EAAoB,EAAAnC,0BAA0BC,GAAe+B,YAAYT,EAASU,EAAoB7B,GAC5G,OAAO,SAACgC,EAAoCC,QAApC,IAAAD,MAAuB,gBAAa,IAAAC,MAAmB,EAAAC,WAC3D,IAAMC,EAAmB,EAAH,KAAOJ,EAAkB/B,SAAO,CAAEgB,IAAKiB,EAAWF,EAAkBf,MAC1F,OAAOgB,EAAMI,QAAQD,OAUxB,EAAAE,gBAAkB,SAAUxC,EAA+BoC,EAAmBD,GACvF,MAAO,CAQHlC,YAAA,SAAYC,EAAyCC,GACjD,OAAO,EAAA8B,WAAWjC,GAAeC,YAAYC,EAAoBC,EAA1D,CAAmEgC,EAAOC,IASrFf,SAAA,SAASC,EAAiBnB,GACtB,OAAO,EAAA8B,WAAWjC,GAAeqB,SAASC,EAASnB,EAA5C,CAAqDgC,EAAOC,IAQvER,mBAAA,SAAmBN,EAAiBnB,GAChC,OAAO,EAAA8B,WAAWjC,GAAe4B,mBAAmBN,EAASnB,EAAtD,CAA+DgC,EAAOC,IASjFP,UAAA,SAAUP,EAAiBnB,GACvB,OAAO,EAAA8B,WAAWjC,GAAe6B,UAAUP,EAASnB,EAA7C,CAAsDgC,EAAOC,IASxEN,WAAA,SAAWR,EAAiBnB,GACxB,OAAO,EAAA8B,WAAWjC,GAAe8B,WAAWR,EAASnB,EAA9C,CAAuDgC,EAAOC,IAUzEL,YAAA,SAAYT,EAAiBU,EAAyC7B,GAClE,OAAO,EAAA8B,WAAWjC,GAAe+B,YAAYT,EAASU,EAAoB7B,EAAnE,CAA4EgC,EAAOC,MAWtG,+B,+CAyEA,OAzE8B,OASnB,YAAAnC,YAAP,SAAmBC,EAAyCC,GACxD,OAAO,EAAA8B,WAAWQ,KAAKzC,eAAeC,YAAYC,EAAoBC,EAA/D,CAAwEsC,KAAKN,MAAOM,KAAKL,WAW7F,YAAAf,SAAP,SAAgBC,EAAiBnB,GAC7B,OAAO,EAAA8B,WAAWQ,KAAKzC,eAAeqB,SAASC,EAASnB,EAAjD,CAA0DsC,KAAKN,MAAOM,KAAKL,WAU/E,YAAAR,mBAAP,SAA0BN,EAAiBnB,GACvC,OAAO,EAAA8B,WAAWQ,KAAKzC,eAAe4B,mBAAmBN,EAASnB,EAA3D,CAAoEsC,KAAKN,MAAOM,KAAKL,WAWzF,YAAAP,UAAP,SAAiBP,EAAiBnB,GAC9B,OAAO,EAAA8B,WAAWQ,KAAKzC,eAAe6B,UAAUP,EAASnB,EAAlD,CAA2DsC,KAAKN,MAAOM,KAAKL,WAWhF,YAAAN,WAAP,SAAkBR,EAAiBnB,GAC/B,OAAO,EAAA8B,WAAWQ,KAAKzC,eAAe8B,WAAWR,EAASnB,EAAnD,CAA4DsC,KAAKN,MAAOM,KAAKL,WAYjF,YAAAL,YAAP,SAAmBT,EAAiBU,EAAyC7B,GACzE,OAAO,EAAA8B,WAAWQ,KAAKzC,eAAe+B,YAAYT,EAASU,EAAoB7B,EAAxE,CAAiFsC,KAAKN,MAAOM,KAAKL,WAGjH,EAzEA,CAA8B,EAAAM,SAAjB,EAAAC,WAgFA,EAAAC,0BAA4B,SAAU5C,GAC/C,MAAO,CASH6C,UAAA,SAAUC,EAAuBC,EAAmBC,EAAsB7C,QAAA,IAAAA,MAAA,IACtE,IAEIC,EADEC,EAAiBC,EAAgBC,MADlB,oBACsC,GAEvDP,IACAI,EAAcJ,EAAcI,aAEhC,IAAMI,EAAyB,EAAH,GAAKC,OAAQ,QAAWL,GAAgBD,GAE9D8C,EAAyB,GAqB/B,YAnBqB/B,IAAjB4B,IACAG,EAAsC,cAAIH,QAG7B5B,IAAb6B,IACAE,EAAkC,UAAIF,QAGtB7B,IAAhB8B,IACAC,EAAqC,aAAID,GAK7C3C,EAAeM,MAAQ,EAAH,OAAON,EAAeM,OAAUsC,GAA2B9C,EAAQQ,cAEhFN,EAAeO,OACtBJ,EAAuBK,QAAU,EAAH,KApBE,IAoBiCV,EAAQU,SAElE,CACHM,IAAKb,EAAgBc,OAAOf,GAC5BF,QAASK,IASjB0C,MAAA,SAAMC,EAA6BhD,QAAA,IAAAA,MAAA,IAC/B,IAEIC,EADEC,EAAiBC,EAAgBC,MADlB,gBACsC,GAEvDP,IACAI,EAAcJ,EAAcI,aAEhC,IAAMI,EAAyB,EAAH,GAAKC,OAAQ,QAAWL,GAAgBD,GAC9DO,EAA0B,GAKhCA,EAAwB,gBAAkB,mBAE1CL,EAAeM,MAAQ,EAAH,OAAON,EAAeM,OANX,IAMgDR,EAAQQ,cAEhFN,EAAeO,OACtBJ,EAAuBK,QAAU,EAAH,KAAOH,GAA4BP,EAAQU,SACzE,IAAMC,EAA8C,iBAAjBqC,GAAiF,qBAAnD3C,EAAuBK,QAAQ,gBAGhG,OAFAL,EAAuBO,KAAQD,EAAqBE,KAAKC,eAA2BC,IAAjBiC,EAA6BA,EAAe,IAAOA,GAAgB,GAE/H,CACHhC,IAAKb,EAAgBc,OAAOf,GAC5BF,QAASK,IASjB4C,OAAA,SAAOC,EAAwBlD,QAAA,IAAAA,MAAA,IAC3B,IAEIC,EADEC,EAAiBC,EAAgBC,MADlB,iBACsC,GAEvDP,IACAI,EAAcJ,EAAcI,aAEhC,IAAMI,EAAyB,EAAH,GAAKC,OAAQ,QAAWL,GAAgBD,GAC9DO,EAA0B,GAchC,OAXI2C,UACA3C,EAAuC,cAAIiB,OAAO0B,IAKtDhD,EAAeM,MAAQ,EAAH,OAAON,EAAeM,OARX,IAQgDR,EAAQQ,cAEhFN,EAAeO,OACtBJ,EAAuBK,QAAU,EAAH,KAAOH,GAA4BP,EAAQU,SAElE,CACHM,IAAKb,EAAgBc,OAAOf,GAC5BF,QAASK,IASjB8C,SAAA,SAASC,EAA2CpD,QAAA,IAAAA,MAAA,IAChD,IAEIC,EADEC,EAAiBC,EAAgBC,MADlB,mBACsC,GAEvDP,IACAI,EAAcJ,EAAcI,aAEhC,IAAMI,EAAyB,EAAH,GAAKC,OAAQ,QAAWL,GAAgBD,GAC9DO,EAA0B,GAKhCA,EAAwB,gBAAkB,mBAE1CL,EAAeM,MAAQ,EAAH,OAAON,EAAeM,OANX,IAMgDR,EAAQQ,cAEhFN,EAAeO,OACtBJ,EAAuBK,QAAU,EAAH,KAAOH,GAA4BP,EAAQU,SACzE,IAAMC,EAAqD,iBAAxByC,GAAwF,qBAAnD/C,EAAuBK,QAAQ,gBAGvG,OAFAL,EAAuBO,KAAQD,EAAqBE,KAAKC,eAAkCC,IAAxBqC,EAAoCA,EAAsB,IAAOA,GAAuB,GAEpJ,CACHpC,IAAKb,EAAgBc,OAAOf,GAC5BF,QAASK,IAajBgD,MAAA,SAAMC,EAAoBC,EAAeV,EAAsBD,EAAmBY,EAAuBxD,QAAA,IAAAA,MAAA,IACrG,IAEIC,EADEC,EAAiBC,EAAgBC,MADlB,gBACsC,GAEvDP,IACAI,EAAcJ,EAAcI,aAEhC,IAAMI,EAAyB,EAAH,GAAKC,OAAQ,QAAWL,GAAgBD,GAE9D8C,EAAyB,GA6B/B,YA3BkB/B,IAAduC,IACAR,EAAmC,WAAIQ,QAG9BvC,IAATwC,IACAT,EAA6B,KAAIS,QAGjBxC,IAAhB8B,IACAC,EAAqC,aAAID,QAG5B9B,IAAb6B,IACAE,EAAkC,UAAIF,QAGrB7B,IAAjByC,IACAV,EAAsC,cAAIU,GAK9CtD,EAAeM,MAAQ,EAAH,OAAON,EAAeM,OAAUsC,GAA2B9C,EAAQQ,cAEhFN,EAAeO,OACtBJ,EAAuBK,QAAU,EAAH,KA5BE,IA4BiCV,EAAQU,SAElE,CACHM,IAAKb,EAAgBc,OAAOf,GAC5BF,QAASK,MAUZ,EAAAoD,WAAa,SAAS5D,GAC/B,MAAO,CASH6C,UAAA,SAAUC,EAAuBC,EAAmBC,EAAsB7C,GACtE,IAAM+B,EAAoB,EAAAU,0BAA0B5C,GAAe6C,UAAUC,EAAcC,EAAUC,EAAa7C,GAClH,OAAO,SAACgC,EAAoCC,QAApC,IAAAD,MAAuB,gBAAa,IAAAC,MAAmB,EAAAC,WAC3D,IAAMC,EAAmB,EAAH,KAAOJ,EAAkB/B,SAAO,CAAEgB,IAAKiB,EAAWF,EAAkBf,MAC1F,OAAOgB,EAAMI,QAAQD,KAS7BY,MAAA,SAAMC,EAA6BhD,GAC/B,IAAM+B,EAAoB,EAAAU,0BAA0B5C,GAAekD,MAAMC,EAAchD,GACvF,OAAO,SAACgC,EAAoCC,QAApC,IAAAD,MAAuB,gBAAa,IAAAC,MAAmB,EAAAC,WAC3D,IAAMC,EAAmB,EAAH,KAAOJ,EAAkB/B,SAAO,CAAEgB,IAAKiB,EAAWF,EAAkBf,MAC1F,OAAOgB,EAAMI,QAAQD,KAS7Bc,OAAA,SAAOC,EAAwBlD,GAC3B,IAAM+B,EAAoB,EAAAU,0BAA0B5C,GAAeoD,OAAOC,EAAelD,GACzF,OAAO,SAACgC,EAAoCC,QAApC,IAAAD,MAAuB,gBAAa,IAAAC,MAAmB,EAAAC,WAC3D,IAAMC,EAAmB,EAAH,KAAOJ,EAAkB/B,SAAO,CAAEgB,IAAKiB,EAAWF,EAAkBf,MAC1F,OAAOgB,EAAMI,QAAQD,KAS7BgB,SAAA,SAASC,EAA2CpD,GAChD,IAAM+B,EAAoB,EAAAU,0BAA0B5C,GAAesD,SAASC,EAAqBpD,GACjG,OAAO,SAACgC,EAAoCC,QAApC,IAAAD,MAAuB,gBAAa,IAAAC,MAAmB,EAAAC,WAC3D,IAAMC,EAAmB,EAAH,KAAOJ,EAAkB/B,SAAO,CAAEgB,IAAKiB,EAAWF,EAAkBf,MAC1F,OAAOgB,EAAMI,QAAQD,KAa7BkB,MAAA,SAAMC,EAAoBC,EAAeV,EAAsBD,EAAmBY,EAAuBxD,GACrG,IAAM+B,EAAoB,EAAAU,0BAA0B5C,GAAewD,MAAMC,EAAWC,EAAMV,EAAaD,EAAUY,EAAcxD,GAC/H,OAAO,SAACgC,EAAoCC,QAApC,IAAAD,MAAuB,gBAAa,IAAAC,MAAmB,EAAAC,WAC3D,IAAMC,EAAmB,EAAH,KAAOJ,EAAkB/B,SAAO,CAAEgB,IAAKiB,EAAWF,EAAkBf,MAC1F,OAAOgB,EAAMI,QAAQD,OAUxB,EAAAuB,gBAAkB,SAAU7D,EAA+BoC,EAAmBD,GACvF,MAAO,CASHU,UAAA,SAAUC,EAAuBC,EAAmBC,EAAsB7C,GACtE,OAAO,EAAAyD,WAAW5D,GAAe6C,UAAUC,EAAcC,EAAUC,EAAa7C,EAAzE,CAAkFgC,EAAOC,IAQpGc,MAAA,SAAMC,EAA6BhD,GAC/B,OAAO,EAAAyD,WAAW5D,GAAekD,MAAMC,EAAchD,EAA9C,CAAuDgC,EAAOC,IAQzEgB,OAAA,SAAOC,EAAwBlD,GAC3B,OAAO,EAAAyD,WAAW5D,GAAeoD,OAAOC,EAAelD,EAAhD,CAAyDgC,EAAOC,IAQ3EkB,SAAA,SAASC,EAA2CpD,GAChD,OAAO,EAAAyD,WAAW5D,GAAesD,SAASC,EAAqBpD,EAAxD,CAAiEgC,EAAOC,IAYnFoB,MAAA,SAAMC,EAAoBC,EAAeV,EAAsBD,EAAmBY,EAAuBxD,GACrG,OAAO,EAAAyD,WAAW5D,GAAewD,MAAMC,EAAWC,EAAMV,EAAaD,EAAUY,EAAcxD,EAAtF,CAA+FgC,EAAOC,MAWzH,+B,+CA8DA,OA9D8B,OAUnB,YAAAS,UAAP,SAAiBC,EAAuBC,EAAmBC,EAAsB7C,GAC7E,OAAO,EAAAyD,WAAWnB,KAAKzC,eAAe6C,UAAUC,EAAcC,EAAUC,EAAa7C,EAA9E,CAAuFsC,KAAKN,MAAOM,KAAKL,WAU5G,YAAAc,MAAP,SAAaC,EAA6BhD,GACtC,OAAO,EAAAyD,WAAWnB,KAAKzC,eAAekD,MAAMC,EAAchD,EAAnD,CAA4DsC,KAAKN,MAAOM,KAAKL,WAUjF,YAAAgB,OAAP,SAAcC,EAAwBlD,GAClC,OAAO,EAAAyD,WAAWnB,KAAKzC,eAAeoD,OAAOC,EAAelD,EAArD,CAA8DsC,KAAKN,MAAOM,KAAKL,WAUnF,YAAAkB,SAAP,SAAgBC,EAA2CpD,GACvD,OAAO,EAAAyD,WAAWnB,KAAKzC,eAAesD,SAASC,EAAqBpD,EAA7D,CAAsEsC,KAAKN,MAAOM,KAAKL,WAc3F,YAAAoB,MAAP,SAAaC,EAAoBC,EAAeV,EAAsBD,EAAmBY,EAAuBxD,GAC5G,OAAO,EAAAyD,WAAWnB,KAAKzC,eAAewD,MAAMC,EAAWC,EAAMV,EAAaD,EAAUY,EAAcxD,EAA3F,CAAoGsC,KAAKN,MAAOM,KAAKL,WAGpI,EA9DA,CAA8B,EAAAM,SAAjB,EAAAoB,WAqEA,EAAAC,0BAA4B,SAAU/D,GAC/C,MAAO,CAOHgE,YAAA,SAAYC,EAAyC9D,QAAA,IAAAA,MAAA,IACjD,IAEIC,EADEC,EAAiBC,EAAgBC,MADlB,UACsC,GAEvDP,IACAI,EAAcJ,EAAcI,aAEhC,IAAMI,EAAyB,EAAH,GAAKC,OAAQ,QAAWL,GAAgBD,GAC9DO,EAA0B,GAKhCA,EAAwB,gBAAkB,mBAE1CL,EAAeM,MAAQ,EAAH,OAAON,EAAeM,OANX,IAMgDR,EAAQQ,cAEhFN,EAAeO,OACtBJ,EAAuBK,QAAU,EAAH,KAAOH,GAA4BP,EAAQU,SACzE,IAAMC,EAAoD,iBAAvBmD,GAAuF,qBAAnDzD,EAAuBK,QAAQ,gBAGtG,OAFAL,EAAuBO,KAAQD,EAAqBE,KAAKC,eAAiCC,IAAvB+C,EAAmCA,EAAqB,IAAOA,GAAsB,GAEjJ,CACH9C,IAAKb,EAAgBc,OAAOf,GAC5BF,QAASK,IASjB0D,gBAAA,SAAgBC,EAAYhE,GAExB,QAFwB,IAAAA,MAAA,IAEpBgE,QACA,MAAM,IAAI,EAAA5C,cAAc,KAAK,6EAEjC,IAGInB,EAHEoB,EAAe,cAChBC,QAAQ,OAAaC,mBAAmBC,OAAOwC,KAC9C9D,EAAiBC,EAAgBC,MAAMiB,GAAc,GAEvDxB,IACAI,EAAcJ,EAAcI,aAEhC,IAAMI,EAAyB,EAAH,GAAKC,OAAQ,UAAaL,GAAgBD,GAWtE,OALAE,EAAeM,MAAQ,EAAH,OAAON,EAAeM,OAJX,IAIgDR,EAAQQ,cAEhFN,EAAeO,OACtBJ,EAAuBK,QAAU,EAAH,KARE,IAQiCV,EAAQU,SAElE,CACHM,IAAKb,EAAgBc,OAAOf,GAC5BF,QAASK,IAUjB4D,aAAA,SAAaD,EAAYhE,GAErB,QAFqB,IAAAA,MAAA,IAEjBgE,QACA,MAAM,IAAI,EAAA5C,cAAc,KAAK,0EAEjC,IAGInB,EAHEoB,EAAe,cAChBC,QAAQ,OAAaC,mBAAmBC,OAAOwC,KAC9C9D,EAAiBC,EAAgBC,MAAMiB,GAAc,GAEvDxB,IACAI,EAAcJ,EAAcI,aAEhC,IAAMI,EAAyB,EAAH,GAAKC,OAAQ,OAAUL,GAAgBD,GAWnE,OALAE,EAAeM,MAAQ,EAAH,OAAON,EAAeM,OAJX,IAIgDR,EAAQQ,cAEhFN,EAAeO,OACtBJ,EAAuBK,QAAU,EAAH,KARE,IAQiCV,EAAQU,SAElE,CACHM,IAAKb,EAAgBc,OAAOf,GAC5BF,QAASK,IAUjB6D,aAAA,SAAaC,EAAiBhD,EAAiBnB,GAE3C,QAF2C,IAAAA,MAAA,IAEvCmE,QACA,MAAM,IAAI,EAAA/C,cAAc,UAAU,+EAGtC,GAAID,QACA,MAAM,IAAI,EAAAC,cAAc,UAAU,+EAEtC,IAIInB,EAJEoB,EAAe,4CAChBC,QAAQ,YAAkBC,mBAAmBC,OAAO2C,KACpD7C,QAAQ,YAAkBC,mBAAmBC,OAAOL,KACnDjB,EAAiBC,EAAgBC,MAAMiB,GAAc,GAEvDxB,IACAI,EAAcJ,EAAcI,aAEhC,IAAMI,EAAyB,EAAH,GAAKC,OAAQ,QAAWL,GAAgBD,GAWpE,OALAE,EAAeM,MAAQ,EAAH,OAAON,EAAeM,OAJX,IAIgDR,EAAQQ,cAEhFN,EAAeO,OACtBJ,EAAuBK,QAAU,EAAH,KARE,IAQiCV,EAAQU,SAElE,CACHM,IAAKb,EAAgBc,OAAOf,GAC5BF,QAASK,IAUjB+D,gBAAA,SAAgBJ,EAAYK,EAAyCrE,GAEjE,QAFiE,IAAAA,MAAA,IAE7DgE,QACA,MAAM,IAAI,EAAA5C,cAAc,KAAK,6EAEjC,IAGInB,EAHEoB,EAAe,cAChBC,QAAQ,OAAaC,mBAAmBC,OAAOwC,KAC9C9D,EAAiBC,EAAgBC,MAAMiB,GAAc,GAEvDxB,IACAI,EAAcJ,EAAcI,aAEhC,IAAMI,EAAyB,EAAH,GAAKC,OAAQ,OAAUL,GAAgBD,GAC7DO,EAA0B,GAKhCA,EAAwB,gBAAkB,mBAE1CL,EAAeM,MAAQ,EAAH,OAAON,EAAeM,OANX,IAMgDR,EAAQQ,cAEhFN,EAAeO,OACtBJ,EAAuBK,QAAU,EAAH,KAAOH,GAA4BP,EAAQU,SACzE,IAAMC,EAAoD,iBAAvB0D,GAAuF,qBAAnDhE,EAAuBK,QAAQ,gBAGtG,OAFAL,EAAuBO,KAAQD,EAAqBE,KAAKC,eAAiCC,IAAvBsD,EAAmCA,EAAqB,IAAOA,GAAsB,GAEjJ,CACHrD,IAAKb,EAAgBc,OAAOf,GAC5BF,QAASK,MAUZ,EAAAiE,WAAa,SAASzE,GAC/B,MAAO,CAOHgE,YAAA,SAAYC,EAAyC9D,GACjD,IAAM+B,EAAoB,EAAA6B,0BAA0B/D,GAAegE,YAAYC,EAAoB9D,GACnG,OAAO,SAACgC,EAAoCC,QAApC,IAAAD,MAAuB,gBAAa,IAAAC,MAAmB,EAAAC,WAC3D,IAAMC,EAAmB,EAAH,KAAOJ,EAAkB/B,SAAO,CAAEgB,IAAKiB,EAAWF,EAAkBf,MAC1F,OAAOgB,EAAMI,QAAQD,KAS7B4B,gBAAA,SAAgBC,EAAYhE,GACxB,IAAM+B,EAAoB,EAAA6B,0BAA0B/D,GAAekE,gBAAgBC,EAAIhE,GACvF,OAAO,SAACgC,EAAoCC,QAApC,IAAAD,MAAuB,gBAAa,IAAAC,MAAmB,EAAAC,WAC3D,IAAMC,EAAmB,EAAH,KAAOJ,EAAkB/B,SAAO,CAAEgB,IAAKiB,EAAWF,EAAkBf,MAC1F,OAAOgB,EAAMI,QAAQD,KAU7B8B,aAAA,SAAaD,EAAYhE,GACrB,IAAM+B,EAAoB,EAAA6B,0BAA0B/D,GAAeoE,aAAaD,EAAIhE,GACpF,OAAO,SAACgC,EAAoCC,QAApC,IAAAD,MAAuB,gBAAa,IAAAC,MAAmB,EAAAC,WAC3D,IAAMC,EAAmB,EAAH,KAAOJ,EAAkB/B,SAAO,CAAEgB,IAAKiB,EAAWF,EAAkBf,MAC1F,OAAOgB,EAAMI,QAAQD,KAU7B+B,aAAA,SAAaC,EAAiBhD,EAAiBnB,GAC3C,IAAM+B,EAAoB,EAAA6B,0BAA0B/D,GAAeqE,aAAaC,EAAShD,EAASnB,GAClG,OAAO,SAACgC,EAAoCC,QAApC,IAAAD,MAAuB,gBAAa,IAAAC,MAAmB,EAAAC,WAC3D,IAAMC,EAAmB,EAAH,KAAOJ,EAAkB/B,SAAO,CAAEgB,IAAKiB,EAAWF,EAAkBf,MAC1F,OAAOgB,EAAMI,QAAQD,KAU7BiC,gBAAA,SAAgBJ,EAAYK,EAAyCrE,GACjE,IAAM+B,EAAoB,EAAA6B,0BAA0B/D,GAAeuE,gBAAgBJ,EAAIK,EAAoBrE,GAC3G,OAAO,SAACgC,EAAoCC,QAApC,IAAAD,MAAuB,gBAAa,IAAAC,MAAmB,EAAAC,WAC3D,IAAMC,EAAmB,EAAH,KAAOJ,EAAkB/B,SAAO,CAAEgB,IAAKiB,EAAWF,EAAkBf,MAC1F,OAAOgB,EAAMI,QAAQD,OAUxB,EAAAoC,gBAAkB,SAAU1E,EAA+BoC,EAAmBD,GACvF,MAAO,CAOH6B,YAAA,SAAYC,EAAyC9D,GACjD,OAAO,EAAAsE,WAAWzE,GAAegE,YAAYC,EAAoB9D,EAA1D,CAAmEgC,EAAOC,IAQrF8B,gBAAA,SAAgBC,EAAYhE,GACxB,OAAO,EAAAsE,WAAWzE,GAAekE,gBAAgBC,EAAIhE,EAA9C,CAAuDgC,EAAOC,IASzEgC,aAAA,SAAaD,EAAYhE,GACrB,OAAO,EAAAsE,WAAWzE,GAAeoE,aAAaD,EAAIhE,EAA3C,CAAoDgC,EAAOC,IAStEiC,aAAA,SAAaC,EAAiBhD,EAAiBnB,GAC3C,OAAO,EAAAsE,WAAWzE,GAAeqE,aAAaC,EAAShD,EAASnB,EAAzD,CAAkEgC,EAAOC,IASpFmC,gBAAA,SAAgBJ,EAAYK,EAAyCrE,GACjE,OAAO,EAAAsE,WAAWzE,GAAeuE,gBAAgBJ,EAAIK,EAAoBrE,EAAlE,CAA2EgC,EAAOC,MAWrG,+B,+CA2DA,OA3D8B,OAQnB,YAAA4B,YAAP,SAAmBC,EAAyC9D,GACxD,OAAO,EAAAsE,WAAWhC,KAAKzC,eAAegE,YAAYC,EAAoB9D,EAA/D,CAAwEsC,KAAKN,MAAOM,KAAKL,WAU7F,YAAA8B,gBAAP,SAAuBC,EAAYhE,GAC/B,OAAO,EAAAsE,WAAWhC,KAAKzC,eAAekE,gBAAgBC,EAAIhE,EAAnD,CAA4DsC,KAAKN,MAAOM,KAAKL,WAWjF,YAAAgC,aAAP,SAAoBD,EAAYhE,GAC5B,OAAO,EAAAsE,WAAWhC,KAAKzC,eAAeoE,aAAaD,EAAIhE,EAAhD,CAAyDsC,KAAKN,MAAOM,KAAKL,WAW9E,YAAAiC,aAAP,SAAoBC,EAAiBhD,EAAiBnB,GAClD,OAAO,EAAAsE,WAAWhC,KAAKzC,eAAeqE,aAAaC,EAAShD,EAASnB,EAA9D,CAAuEsC,KAAKN,MAAOM,KAAKL,WAW5F,YAAAmC,gBAAP,SAAuBJ,EAAYK,EAAyCrE,GACxE,OAAO,EAAAsE,WAAWhC,KAAKzC,eAAeuE,gBAAgBJ,EAAIK,EAAoBrE,EAAvE,CAAgFsC,KAAKN,MAAOM,KAAKL,WAGhH,EA3DA,CAA8B,EAAAM,SAAjB,EAAAiC,Y,cCniDbtH,EAAOD,QAAUwC,QAAQ,Q,8ZCiBzB,WAEa,EAAAyC,UAAY,wBAAwBZ,QAAQ,OAAQ,IAMpD,EAAAmD,mBAAqB,CAC9BC,IAAK,IACLC,IAAK,IACLC,IAAK,KACLC,MAAO,KAkBX,MAGI,SAAYhF,EAAyCoC,EAAwCD,QAAxC,IAAAC,MAAmB,EAAAC,gBAAqB,IAAAF,MAAuB,WAA/D,KAAAC,WAAwC,KAAAD,QACrFnC,IACAyC,KAAKzC,cAAgBA,EACrByC,KAAKL,SAAWpC,EAAcoC,UAAYK,KAAKL,WAN9C,EAAAM,UAiBb,kBAEI,WAAmBuC,EAAeC,GAAlC,MACI,YAAMA,IAAI,K,OADK,EAAAD,QADnB,EAAA9G,KAAwB,gB,EAI5B,OALmC,OAKnC,EALA,CAAmCgH,OAAtB,EAAA5D,iB,8ECnDb,+BAiCA,OAHW,EAAA6D,oBAAP,WACI,OAAOC,EAASC,kBAzBb,EAAAC,mBAAoCrE,EAEpC,EAAAoE,iBAA0E,CAC7E,CACI,KAAQ,YACR,SAAY,YACZ,KAAQ,UAEZ,CACI,KAAQ,YACR,SAAY,YACZ,KAAQ,UAEZ,CACI,KAAQ,aACR,SAAY,aACZ,KAAQ,UAEZ,CACI,KAAQ,aACR,SAAY,aACZ,KAAQ,WAMpB,EAjCA,GAAa,EAAAD,Y,8ECAb,+BA2BA,OAHW,EAAAD,oBAAP,WACI,OAAOI,EAAmBF,kBApBvB,EAAAC,mBAAoCrE,EAEpC,EAAAoE,iBAA0E,CAC7E,CACI,KAAQ,OACR,SAAY,OACZ,KAAQ,UAEZ,CACI,KAAQ,cACR,SAAY,cACZ,KAAQ,UAEZ,CACI,KAAQ,SACR,SAAY,SACZ,KAAQ,WAMpB,EA3BA,GAAa,EAAAE,sB,8ECCb,+BA2BA,OAHW,EAAAJ,oBAAP,WACI,OAAOK,EAAmBH,kBApBvB,EAAAC,mBAAoCrE,EAEpC,EAAAoE,iBAA0E,CAC7E,CACI,KAAQ,QACR,SAAY,QACZ,KAAQ,UAEZ,CACI,KAAQ,cACR,SAAY,cACZ,KAAQ,UAEZ,CACI,KAAQ,OACR,SAAY,OACZ,KAAQ,kBAMpB,EA3BA,GAAa,EAAAG,sB,8ECDb,+BAqBA,OAHW,EAAAL,oBAAP,WACI,OAAOM,EAAcJ,kBAflB,EAAAC,mBAAoCrE,EAEpC,EAAAoE,iBAA0E,CAC7E,CACI,KAAQ,QACR,SAAY,QACZ,KAAQ,UAEZ,CACI,KAAQ,UACR,SAAY,UACZ,KAAQ,WAMpB,EArBA,GAAa,EAAAI,iB,8ECAb,+BA2BA,OAHW,EAAAN,oBAAP,WACI,OAAOO,EAAcL,kBApBlB,EAAAC,mBAAoCrE,EAEpC,EAAAoE,iBAA0E,CAC7E,CACI,KAAQ,OACR,SAAY,OACZ,KAAQ,UAEZ,CACI,KAAQ,cACR,SAAY,cACZ,KAAQ,UAEZ,CACI,KAAQ,SACR,SAAY,SACZ,KAAQ,WAMpB,EA3BA,GAAa,EAAAK,iB,8ECAb,+BAqBA,OAHW,EAAAP,oBAAP,WACI,OAAOQ,EAAcN,kBAflB,EAAAC,mBAAoCrE,EAEpC,EAAAoE,iBAA0E,CAC7E,CACI,KAAQ,OACR,SAAY,OACZ,KAAQ,UAEZ,CACI,KAAQ,cACR,SAAY,cACZ,KAAQ,yBAMpB,EArBA,GAAa,EAAAM,iB,8ECAb,+BAiCA,OAHW,EAAAR,oBAAP,WACI,OAAOS,EAAaP,kBAzBjB,EAAAC,mBAAoCrE,EAEpC,EAAAoE,iBAA0E,CAC7E,CACI,KAAQ,QACR,SAAY,QACZ,KAAQ,UAEZ,CACI,KAAQ,WACR,SAAY,WACZ,KAAQ,UAEZ,CACI,KAAQ,WACR,SAAY,WACZ,KAAQ,UAEZ,CACI,KAAQ,cACR,SAAY,cACZ,KAAQ,WAMpB,EAjCA,GAAa,EAAAO,gB,8ECAb,+BAqBA,OAHW,EAAAT,oBAAP,WACI,OAAOU,EAAcR,kBAflB,EAAAC,mBAAoCrE,EAEpC,EAAAoE,iBAA0E,CAC7E,CACI,KAAQ,OACR,SAAY,OACZ,KAAQ,UAEZ,CACI,KAAQ,cACR,SAAY,cACZ,KAAQ,WAMpB,EArBA,GAAa,EAAAQ,iB,8ECAb,+BAqBA,OAHW,EAAAV,oBAAP,WACI,OAAOW,EAAoBT,kBAfxB,EAAAC,mBAAoCrE,EAEpC,EAAAoE,iBAA0E,CAC7E,CACI,KAAQ,QACR,SAAY,QACZ,KAAQ,UAEZ,CACI,KAAQ,WACR,SAAY,WACZ,KAAQ,WAMpB,EArBA,GAAa,EAAAS,uB,8ECAb,+BAeA,OAHW,EAAAX,oBAAP,WACI,OAAOY,EAAqBV,kBAVzB,EAAAC,mBAAoCrE,EAEpC,EAAAoE,iBAA0E,CAC7E,CACI,KAAQ,SACR,SAAY,SACZ,KAAQ,WAMpB,EAfA,GAAa,EAAAU,wB,8ECEb,+BAiCA,OAHW,EAAAZ,oBAAP,WACI,OAAOa,EAAcX,kBAzBlB,EAAAC,mBAAoCrE,EAEpC,EAAAoE,iBAA0E,CAC7E,CACI,KAAQ,QACR,SAAY,QACZ,KAAQ,UAEZ,CACI,KAAQ,cACR,SAAY,cACZ,KAAQ,UAEZ,CACI,KAAQ,OACR,SAAY,OACZ,KAAQ,iBAEZ,CACI,KAAQ,QACR,SAAY,QACZ,KAAQ,aAMpB,EAjCA,GAAa,EAAAW,iB,8ECFb,+BAiCA,OAHW,EAAAb,oBAAP,WACI,OAAOc,EAAcZ,kBAzBlB,EAAAC,mBAAoCrE,EAEpC,EAAAoE,iBAA0E,CAC7E,CACI,KAAQ,cACR,SAAY,cACZ,KAAQ,UAEZ,CACI,KAAQ,wBACR,SAAY,wBACZ,KAAQ,UAEZ,CACI,KAAQ,eACR,SAAY,eACZ,KAAQ,UAEZ,CACI,KAAQ,yBACR,SAAY,yBACZ,KAAQ,WAMpB,EAjCA,GAAa,EAAAY,iB,8ECAb,+BA2BA,OAHW,EAAAd,oBAAP,WACI,OAAOe,EAAmBb,kBApBvB,EAAAC,mBAAoCrE,EAEpC,EAAAoE,iBAA0E,CAC7E,CACI,KAAQ,OACR,SAAY,OACZ,KAAQ,UAEZ,CACI,KAAQ,cACR,SAAY,cACZ,KAAQ,UAEZ,CACI,KAAQ,SACR,SAAY,SACZ,KAAQ,WAMpB,EA3BA,GAAa,EAAAa,sB,8ECCb,+BA2BA,OAHW,EAAAf,oBAAP,WACI,OAAOgB,EAAmBd,kBApBvB,EAAAC,mBAAoCrE,EAEpC,EAAAoE,iBAA0E,CAC7E,CACI,KAAQ,QACR,SAAY,QACZ,KAAQ,UAEZ,CACI,KAAQ,cACR,SAAY,cACZ,KAAQ,UAEZ,CACI,KAAQ,OACR,SAAY,OACZ,KAAQ,kBAMpB,EA3BA,GAAa,EAAAc","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"tyr-map\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"tyr-map\"] = factory();\n\telse\n\t\troot[\"tyr-map\"] = factory();\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = require(\"axios\");","import * as axiosApi from './axios/api';\r\nexport const AxiosApi = axiosApi;\r\nexport * from './node/model/auditDto';\r\nexport * from './node/model/createGroupRequest';\r\nexport * from './node/model/createRouteRequest';\r\nexport * from './node/model/errorResponse';\r\nexport * from './node/model/groupResponse';\r\nexport * from './node/model/lineStringDto';\r\nexport * from './node/model/loginRequest';\r\nexport * from './node/model/loginResponse';\r\nexport * from './node/model/registrationRequest';\r\nexport * from './node/model/registrationResponse';\r\nexport * from './node/model/routeResponse';\r\nexport * from './node/model/tokenResponse';\r\nexport * from './node/model/updateGroupRequest';\r\nexport * from './node/model/updateRouteRequest';\r\n","// tslint:disable\n/**\n * swagger\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as globalImportUrl from 'url';\nimport { Configuration } from './configuration';\nimport globalAxios, { AxiosPromise, AxiosInstance } from 'axios';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from './base';\n\n/**\n * \n * @export\n * @interface AuditDto\n */\nexport interface AuditDto {\n    /**\n     * \n     * @type {string}\n     * @memberof AuditDto\n     */\n    createdBy?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof AuditDto\n     */\n    createdAt?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof AuditDto\n     */\n    modifiedBy?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof AuditDto\n     */\n    modifiedAt?: string;\n}\n/**\n * \n * @export\n * @interface CreateGroupRequest\n */\nexport interface CreateGroupRequest {\n    /**\n     * \n     * @type {string}\n     * @memberof CreateGroupRequest\n     */\n    name?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof CreateGroupRequest\n     */\n    description?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof CreateGroupRequest\n     */\n    access?: string;\n}\n/**\n * \n * @export\n * @interface CreateRouteRequest\n */\nexport interface CreateRouteRequest {\n    /**\n     * \n     * @type {string}\n     * @memberof CreateRouteRequest\n     */\n    title?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof CreateRouteRequest\n     */\n    description?: string;\n    /**\n     * \n     * @type {LineStringDto}\n     * @memberof CreateRouteRequest\n     */\n    path?: LineStringDto;\n}\n/**\n * \n * @export\n * @interface ErrorResponse\n */\nexport interface ErrorResponse {\n    /**\n     * \n     * @type {string}\n     * @memberof ErrorResponse\n     */\n    cause: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ErrorResponse\n     */\n    message?: string;\n}\n/**\n * \n * @export\n * @interface GroupResponse\n */\nexport interface GroupResponse {\n    /**\n     * \n     * @type {string}\n     * @memberof GroupResponse\n     */\n    name?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof GroupResponse\n     */\n    description?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof GroupResponse\n     */\n    access?: string;\n}\n/**\n * \n * @export\n * @interface LineStringDto\n */\nexport interface LineStringDto {\n    /**\n     * \n     * @type {string}\n     * @memberof LineStringDto\n     */\n    type?: string;\n    /**\n     * \n     * @type {Array<Array<number>>}\n     * @memberof LineStringDto\n     */\n    coordinates?: Array<Array<number>>;\n}\n/**\n * \n * @export\n * @interface LoginRequest\n */\nexport interface LoginRequest {\n    /**\n     * \n     * @type {string}\n     * @memberof LoginRequest\n     */\n    email?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof LoginRequest\n     */\n    password?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof LoginRequest\n     */\n    clientId?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof LoginRequest\n     */\n    redirectUri?: string;\n}\n/**\n * \n * @export\n * @interface LoginResponse\n */\nexport interface LoginResponse {\n    /**\n     * \n     * @type {string}\n     * @memberof LoginResponse\n     */\n    code?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof LoginResponse\n     */\n    redirectUri?: string;\n}\n/**\n * \n * @export\n * @interface RegistrationRequest\n */\nexport interface RegistrationRequest {\n    /**\n     * \n     * @type {string}\n     * @memberof RegistrationRequest\n     */\n    email: string;\n    /**\n     * \n     * @type {string}\n     * @memberof RegistrationRequest\n     */\n    password: string;\n}\n/**\n * \n * @export\n * @interface RegistrationResponse\n */\nexport interface RegistrationResponse {\n    /**\n     * \n     * @type {string}\n     * @memberof RegistrationResponse\n     */\n    userId?: string;\n}\n/**\n * \n * @export\n * @interface RouteResponse\n */\nexport interface RouteResponse {\n    /**\n     * \n     * @type {string}\n     * @memberof RouteResponse\n     */\n    title?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof RouteResponse\n     */\n    description?: string;\n    /**\n     * \n     * @type {LineStringDto}\n     * @memberof RouteResponse\n     */\n    path?: LineStringDto;\n    /**\n     * \n     * @type {AuditDto}\n     * @memberof RouteResponse\n     */\n    audit?: AuditDto;\n}\n/**\n * \n * @export\n * @interface TokenResponse\n */\nexport interface TokenResponse {\n    /**\n     * \n     * @type {string}\n     * @memberof TokenResponse\n     */\n    accessToken?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof TokenResponse\n     */\n    accessTokenExpiration?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof TokenResponse\n     */\n    refreshToken?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof TokenResponse\n     */\n    refreshTokenExpiration?: string;\n}\n/**\n * \n * @export\n * @interface UpdateGroupRequest\n */\nexport interface UpdateGroupRequest {\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateGroupRequest\n     */\n    name?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateGroupRequest\n     */\n    description?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateGroupRequest\n     */\n    access?: string;\n}\n/**\n * \n * @export\n * @interface UpdateRouteRequest\n */\nexport interface UpdateRouteRequest {\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateRouteRequest\n     */\n    title?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateRouteRequest\n     */\n    description?: string;\n    /**\n     * \n     * @type {LineStringDto}\n     * @memberof UpdateRouteRequest\n     */\n    path?: LineStringDto;\n}\n\n/**\n * GroupApi - axios parameter creator\n * @export\n */\nexport const GroupApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary createGroup\n         * @param {CreateGroupRequest} [createGroupRequest] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createGroup(createGroupRequest?: CreateGroupRequest, options: any = {}): RequestArgs {\n            const localVarPath = `/group`;\n            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...options.headers};\n            const needsSerialization = (typeof createGroupRequest !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(createGroupRequest !== undefined ? createGroupRequest : {}) : (createGroupRequest || \"\");\n\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary findById\n         * @param {string} groupId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        findById(groupId: string, options: any = {}): RequestArgs {\n            // verify required parameter 'groupId' is not null or undefined\n            if (groupId === null || groupId === undefined) {\n                throw new RequiredError('groupId','Required parameter groupId was null or undefined when calling findById.');\n            }\n            const localVarPath = `/group/{groupId}`\n                .replace(`{${\"groupId\"}}`, encodeURIComponent(String(groupId)));\n            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...options.headers};\n\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {string} groupId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        groupGroupIdDelete(groupId: string, options: any = {}): RequestArgs {\n            // verify required parameter 'groupId' is not null or undefined\n            if (groupId === null || groupId === undefined) {\n                throw new RequiredError('groupId','Required parameter groupId was null or undefined when calling groupGroupIdDelete.');\n            }\n            const localVarPath = `/group/{groupId}`\n                .replace(`{${\"groupId\"}}`, encodeURIComponent(String(groupId)));\n            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...options.headers};\n\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary joinGroup\n         * @param {string} groupId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        joinGroup(groupId: string, options: any = {}): RequestArgs {\n            // verify required parameter 'groupId' is not null or undefined\n            if (groupId === null || groupId === undefined) {\n                throw new RequiredError('groupId','Required parameter groupId was null or undefined when calling joinGroup.');\n            }\n            const localVarPath = `/group/{groupId}/join`\n                .replace(`{${\"groupId\"}}`, encodeURIComponent(String(groupId)));\n            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...options.headers};\n\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary leaveGroup\n         * @param {string} groupId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        leaveGroup(groupId: string, options: any = {}): RequestArgs {\n            // verify required parameter 'groupId' is not null or undefined\n            if (groupId === null || groupId === undefined) {\n                throw new RequiredError('groupId','Required parameter groupId was null or undefined when calling leaveGroup.');\n            }\n            const localVarPath = `/group/{groupId}/leave`\n                .replace(`{${\"groupId\"}}`, encodeURIComponent(String(groupId)));\n            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...options.headers};\n\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary updateGroup\n         * @param {string} groupId \n         * @param {UpdateGroupRequest} [updateGroupRequest] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateGroup(groupId: string, updateGroupRequest?: UpdateGroupRequest, options: any = {}): RequestArgs {\n            // verify required parameter 'groupId' is not null or undefined\n            if (groupId === null || groupId === undefined) {\n                throw new RequiredError('groupId','Required parameter groupId was null or undefined when calling updateGroup.');\n            }\n            const localVarPath = `/group/{groupId}`\n                .replace(`{${\"groupId\"}}`, encodeURIComponent(String(groupId)));\n            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...options.headers};\n            const needsSerialization = (typeof updateGroupRequest !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(updateGroupRequest !== undefined ? updateGroupRequest : {}) : (updateGroupRequest || \"\");\n\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * GroupApi - functional programming interface\n * @export\n */\nexport const GroupApiFp = function(configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary createGroup\n         * @param {CreateGroupRequest} [createGroupRequest] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createGroup(createGroupRequest?: CreateGroupRequest, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<string> {\n            const localVarAxiosArgs = GroupApiAxiosParamCreator(configuration).createGroup(createGroupRequest, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary findById\n         * @param {string} groupId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        findById(groupId: string, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<GroupResponse> {\n            const localVarAxiosArgs = GroupApiAxiosParamCreator(configuration).findById(groupId, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {string} groupId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        groupGroupIdDelete(groupId: string, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<void> {\n            const localVarAxiosArgs = GroupApiAxiosParamCreator(configuration).groupGroupIdDelete(groupId, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary joinGroup\n         * @param {string} groupId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        joinGroup(groupId: string, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<void> {\n            const localVarAxiosArgs = GroupApiAxiosParamCreator(configuration).joinGroup(groupId, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary leaveGroup\n         * @param {string} groupId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        leaveGroup(groupId: string, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<void> {\n            const localVarAxiosArgs = GroupApiAxiosParamCreator(configuration).leaveGroup(groupId, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary updateGroup\n         * @param {string} groupId \n         * @param {UpdateGroupRequest} [updateGroupRequest] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateGroup(groupId: string, updateGroupRequest?: UpdateGroupRequest, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<void> {\n            const localVarAxiosArgs = GroupApiAxiosParamCreator(configuration).updateGroup(groupId, updateGroupRequest, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n    }\n};\n\n/**\n * GroupApi - factory interface\n * @export\n */\nexport const GroupApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    return {\n        /**\n         * \n         * @summary createGroup\n         * @param {CreateGroupRequest} [createGroupRequest] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createGroup(createGroupRequest?: CreateGroupRequest, options?: any) {\n            return GroupApiFp(configuration).createGroup(createGroupRequest, options)(axios, basePath);\n        },\n        /**\n         * \n         * @summary findById\n         * @param {string} groupId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        findById(groupId: string, options?: any) {\n            return GroupApiFp(configuration).findById(groupId, options)(axios, basePath);\n        },\n        /**\n         * \n         * @param {string} groupId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        groupGroupIdDelete(groupId: string, options?: any) {\n            return GroupApiFp(configuration).groupGroupIdDelete(groupId, options)(axios, basePath);\n        },\n        /**\n         * \n         * @summary joinGroup\n         * @param {string} groupId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        joinGroup(groupId: string, options?: any) {\n            return GroupApiFp(configuration).joinGroup(groupId, options)(axios, basePath);\n        },\n        /**\n         * \n         * @summary leaveGroup\n         * @param {string} groupId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        leaveGroup(groupId: string, options?: any) {\n            return GroupApiFp(configuration).leaveGroup(groupId, options)(axios, basePath);\n        },\n        /**\n         * \n         * @summary updateGroup\n         * @param {string} groupId \n         * @param {UpdateGroupRequest} [updateGroupRequest] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateGroup(groupId: string, updateGroupRequest?: UpdateGroupRequest, options?: any) {\n            return GroupApiFp(configuration).updateGroup(groupId, updateGroupRequest, options)(axios, basePath);\n        },\n    };\n};\n\n/**\n * GroupApi - object-oriented interface\n * @export\n * @class GroupApi\n * @extends {BaseAPI}\n */\nexport class GroupApi extends BaseAPI {\n    /**\n     * \n     * @summary createGroup\n     * @param {CreateGroupRequest} [createGroupRequest] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    public createGroup(createGroupRequest?: CreateGroupRequest, options?: any) {\n        return GroupApiFp(this.configuration).createGroup(createGroupRequest, options)(this.axios, this.basePath);\n    }\n\n    /**\n     * \n     * @summary findById\n     * @param {string} groupId \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    public findById(groupId: string, options?: any) {\n        return GroupApiFp(this.configuration).findById(groupId, options)(this.axios, this.basePath);\n    }\n\n    /**\n     * \n     * @param {string} groupId \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    public groupGroupIdDelete(groupId: string, options?: any) {\n        return GroupApiFp(this.configuration).groupGroupIdDelete(groupId, options)(this.axios, this.basePath);\n    }\n\n    /**\n     * \n     * @summary joinGroup\n     * @param {string} groupId \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    public joinGroup(groupId: string, options?: any) {\n        return GroupApiFp(this.configuration).joinGroup(groupId, options)(this.axios, this.basePath);\n    }\n\n    /**\n     * \n     * @summary leaveGroup\n     * @param {string} groupId \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    public leaveGroup(groupId: string, options?: any) {\n        return GroupApiFp(this.configuration).leaveGroup(groupId, options)(this.axios, this.basePath);\n    }\n\n    /**\n     * \n     * @summary updateGroup\n     * @param {string} groupId \n     * @param {UpdateGroupRequest} [updateGroupRequest] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    public updateGroup(groupId: string, updateGroupRequest?: UpdateGroupRequest, options?: any) {\n        return GroupApiFp(this.configuration).updateGroup(groupId, updateGroupRequest, options)(this.axios, this.basePath);\n    }\n\n}\n\n\n/**\n * OauthApi - axios parameter creator\n * @export\n */\nexport const OauthApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @param {string} [responseType] \n         * @param {string} [clientId] \n         * @param {string} [redirectUri] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        authorize(responseType?: string, clientId?: string, redirectUri?: string, options: any = {}): RequestArgs {\n            const localVarPath = `/oauth/authorize`;\n            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (responseType !== undefined) {\n                localVarQueryParameter['response_type'] = responseType;\n            }\n\n            if (clientId !== undefined) {\n                localVarQueryParameter['client_id'] = clientId;\n            }\n\n            if (redirectUri !== undefined) {\n                localVarQueryParameter['redirect_uri'] = redirectUri;\n            }\n\n\n    \n            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...options.headers};\n\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {LoginRequest} [loginRequest] LoginRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        login(loginRequest?: LoginRequest, options: any = {}): RequestArgs {\n            const localVarPath = `/oauth/login`;\n            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...options.headers};\n            const needsSerialization = (typeof loginRequest !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(loginRequest !== undefined ? loginRequest : {}) : (loginRequest || \"\");\n\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {string} [authorization] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        logout(authorization?: string, options: any = {}): RequestArgs {\n            const localVarPath = `/oauth/logout`;\n            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (authorization !== undefined && authorization !== null) {\n                localVarHeaderParameter['Authorization'] = String(authorization);\n            }\n\n\n    \n            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...options.headers};\n\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {RegistrationRequest} [registrationRequest] RegistrationRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        register(registrationRequest?: RegistrationRequest, options: any = {}): RequestArgs {\n            const localVarPath = `/oauth/register`;\n            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...options.headers};\n            const needsSerialization = (typeof registrationRequest !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(registrationRequest !== undefined ? registrationRequest : {}) : (registrationRequest || \"\");\n\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {string} [grantType] \n         * @param {string} [code] \n         * @param {string} [redirectUri] \n         * @param {string} [clientId] \n         * @param {string} [refreshToken] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        token(grantType?: string, code?: string, redirectUri?: string, clientId?: string, refreshToken?: string, options: any = {}): RequestArgs {\n            const localVarPath = `/oauth/token`;\n            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (grantType !== undefined) {\n                localVarQueryParameter['grant_type'] = grantType;\n            }\n\n            if (code !== undefined) {\n                localVarQueryParameter['code'] = code;\n            }\n\n            if (redirectUri !== undefined) {\n                localVarQueryParameter['redirect_uri'] = redirectUri;\n            }\n\n            if (clientId !== undefined) {\n                localVarQueryParameter['client_id'] = clientId;\n            }\n\n            if (refreshToken !== undefined) {\n                localVarQueryParameter['refresh_token'] = refreshToken;\n            }\n\n\n    \n            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...options.headers};\n\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * OauthApi - functional programming interface\n * @export\n */\nexport const OauthApiFp = function(configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @param {string} [responseType] \n         * @param {string} [clientId] \n         * @param {string} [redirectUri] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        authorize(responseType?: string, clientId?: string, redirectUri?: string, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<void> {\n            const localVarAxiosArgs = OauthApiAxiosParamCreator(configuration).authorize(responseType, clientId, redirectUri, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {LoginRequest} [loginRequest] LoginRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        login(loginRequest?: LoginRequest, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<LoginResponse> {\n            const localVarAxiosArgs = OauthApiAxiosParamCreator(configuration).login(loginRequest, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {string} [authorization] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        logout(authorization?: string, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<void> {\n            const localVarAxiosArgs = OauthApiAxiosParamCreator(configuration).logout(authorization, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {RegistrationRequest} [registrationRequest] RegistrationRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        register(registrationRequest?: RegistrationRequest, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<RegistrationResponse> {\n            const localVarAxiosArgs = OauthApiAxiosParamCreator(configuration).register(registrationRequest, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {string} [grantType] \n         * @param {string} [code] \n         * @param {string} [redirectUri] \n         * @param {string} [clientId] \n         * @param {string} [refreshToken] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        token(grantType?: string, code?: string, redirectUri?: string, clientId?: string, refreshToken?: string, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<TokenResponse> {\n            const localVarAxiosArgs = OauthApiAxiosParamCreator(configuration).token(grantType, code, redirectUri, clientId, refreshToken, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n    }\n};\n\n/**\n * OauthApi - factory interface\n * @export\n */\nexport const OauthApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    return {\n        /**\n         * \n         * @param {string} [responseType] \n         * @param {string} [clientId] \n         * @param {string} [redirectUri] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        authorize(responseType?: string, clientId?: string, redirectUri?: string, options?: any) {\n            return OauthApiFp(configuration).authorize(responseType, clientId, redirectUri, options)(axios, basePath);\n        },\n        /**\n         * \n         * @param {LoginRequest} [loginRequest] LoginRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        login(loginRequest?: LoginRequest, options?: any) {\n            return OauthApiFp(configuration).login(loginRequest, options)(axios, basePath);\n        },\n        /**\n         * \n         * @param {string} [authorization] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        logout(authorization?: string, options?: any) {\n            return OauthApiFp(configuration).logout(authorization, options)(axios, basePath);\n        },\n        /**\n         * \n         * @param {RegistrationRequest} [registrationRequest] RegistrationRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        register(registrationRequest?: RegistrationRequest, options?: any) {\n            return OauthApiFp(configuration).register(registrationRequest, options)(axios, basePath);\n        },\n        /**\n         * \n         * @param {string} [grantType] \n         * @param {string} [code] \n         * @param {string} [redirectUri] \n         * @param {string} [clientId] \n         * @param {string} [refreshToken] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        token(grantType?: string, code?: string, redirectUri?: string, clientId?: string, refreshToken?: string, options?: any) {\n            return OauthApiFp(configuration).token(grantType, code, redirectUri, clientId, refreshToken, options)(axios, basePath);\n        },\n    };\n};\n\n/**\n * OauthApi - object-oriented interface\n * @export\n * @class OauthApi\n * @extends {BaseAPI}\n */\nexport class OauthApi extends BaseAPI {\n    /**\n     * \n     * @param {string} [responseType] \n     * @param {string} [clientId] \n     * @param {string} [redirectUri] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OauthApi\n     */\n    public authorize(responseType?: string, clientId?: string, redirectUri?: string, options?: any) {\n        return OauthApiFp(this.configuration).authorize(responseType, clientId, redirectUri, options)(this.axios, this.basePath);\n    }\n\n    /**\n     * \n     * @param {LoginRequest} [loginRequest] LoginRequest\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OauthApi\n     */\n    public login(loginRequest?: LoginRequest, options?: any) {\n        return OauthApiFp(this.configuration).login(loginRequest, options)(this.axios, this.basePath);\n    }\n\n    /**\n     * \n     * @param {string} [authorization] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OauthApi\n     */\n    public logout(authorization?: string, options?: any) {\n        return OauthApiFp(this.configuration).logout(authorization, options)(this.axios, this.basePath);\n    }\n\n    /**\n     * \n     * @param {RegistrationRequest} [registrationRequest] RegistrationRequest\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OauthApi\n     */\n    public register(registrationRequest?: RegistrationRequest, options?: any) {\n        return OauthApiFp(this.configuration).register(registrationRequest, options)(this.axios, this.basePath);\n    }\n\n    /**\n     * \n     * @param {string} [grantType] \n     * @param {string} [code] \n     * @param {string} [redirectUri] \n     * @param {string} [clientId] \n     * @param {string} [refreshToken] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OauthApi\n     */\n    public token(grantType?: string, code?: string, redirectUri?: string, clientId?: string, refreshToken?: string, options?: any) {\n        return OauthApiFp(this.configuration).token(grantType, code, redirectUri, clientId, refreshToken, options)(this.axios, this.basePath);\n    }\n\n}\n\n\n/**\n * RouteApi - axios parameter creator\n * @export\n */\nexport const RouteApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @param {CreateRouteRequest} [createRouteRequest] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createRoute(createRouteRequest?: CreateRouteRequest, options: any = {}): RequestArgs {\n            const localVarPath = `/route`;\n            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...options.headers};\n            const needsSerialization = (typeof createRouteRequest !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(createRouteRequest !== undefined ? createRouteRequest : {}) : (createRouteRequest || \"\");\n\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {string} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteRouteById(id: string, options: any = {}): RequestArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling deleteRouteById.');\n            }\n            const localVarPath = `/route/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...options.headers};\n\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Your GET endpoint\n         * @param {string} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getRouteById(id: string, options: any = {}): RequestArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling getRouteById.');\n            }\n            const localVarPath = `/route/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...options.headers};\n\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {string} routeId \n         * @param {string} groupId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        shareInGroup(routeId: string, groupId: string, options: any = {}): RequestArgs {\n            // verify required parameter 'routeId' is not null or undefined\n            if (routeId === null || routeId === undefined) {\n                throw new RequiredError('routeId','Required parameter routeId was null or undefined when calling shareInGroup.');\n            }\n            // verify required parameter 'groupId' is not null or undefined\n            if (groupId === null || groupId === undefined) {\n                throw new RequiredError('groupId','Required parameter groupId was null or undefined when calling shareInGroup.');\n            }\n            const localVarPath = `/route/{routeId}/share-in-group/{groupId}`\n                .replace(`{${\"routeId\"}}`, encodeURIComponent(String(routeId)))\n                .replace(`{${\"groupId\"}}`, encodeURIComponent(String(groupId)));\n            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...options.headers};\n\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {string} id \n         * @param {UpdateRouteRequest} [updateRouteRequest] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateRouteById(id: string, updateRouteRequest?: UpdateRouteRequest, options: any = {}): RequestArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling updateRouteById.');\n            }\n            const localVarPath = `/route/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...options.headers};\n            const needsSerialization = (typeof updateRouteRequest !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(updateRouteRequest !== undefined ? updateRouteRequest : {}) : (updateRouteRequest || \"\");\n\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * RouteApi - functional programming interface\n * @export\n */\nexport const RouteApiFp = function(configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @param {CreateRouteRequest} [createRouteRequest] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createRoute(createRouteRequest?: CreateRouteRequest, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<string> {\n            const localVarAxiosArgs = RouteApiAxiosParamCreator(configuration).createRoute(createRouteRequest, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {string} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteRouteById(id: string, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<void> {\n            const localVarAxiosArgs = RouteApiAxiosParamCreator(configuration).deleteRouteById(id, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary Your GET endpoint\n         * @param {string} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getRouteById(id: string, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<RouteResponse> {\n            const localVarAxiosArgs = RouteApiAxiosParamCreator(configuration).getRouteById(id, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {string} routeId \n         * @param {string} groupId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        shareInGroup(routeId: string, groupId: string, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<void> {\n            const localVarAxiosArgs = RouteApiAxiosParamCreator(configuration).shareInGroup(routeId, groupId, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {string} id \n         * @param {UpdateRouteRequest} [updateRouteRequest] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateRouteById(id: string, updateRouteRequest?: UpdateRouteRequest, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<void> {\n            const localVarAxiosArgs = RouteApiAxiosParamCreator(configuration).updateRouteById(id, updateRouteRequest, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n    }\n};\n\n/**\n * RouteApi - factory interface\n * @export\n */\nexport const RouteApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    return {\n        /**\n         * \n         * @param {CreateRouteRequest} [createRouteRequest] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createRoute(createRouteRequest?: CreateRouteRequest, options?: any) {\n            return RouteApiFp(configuration).createRoute(createRouteRequest, options)(axios, basePath);\n        },\n        /**\n         * \n         * @param {string} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteRouteById(id: string, options?: any) {\n            return RouteApiFp(configuration).deleteRouteById(id, options)(axios, basePath);\n        },\n        /**\n         * \n         * @summary Your GET endpoint\n         * @param {string} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getRouteById(id: string, options?: any) {\n            return RouteApiFp(configuration).getRouteById(id, options)(axios, basePath);\n        },\n        /**\n         * \n         * @param {string} routeId \n         * @param {string} groupId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        shareInGroup(routeId: string, groupId: string, options?: any) {\n            return RouteApiFp(configuration).shareInGroup(routeId, groupId, options)(axios, basePath);\n        },\n        /**\n         * \n         * @param {string} id \n         * @param {UpdateRouteRequest} [updateRouteRequest] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateRouteById(id: string, updateRouteRequest?: UpdateRouteRequest, options?: any) {\n            return RouteApiFp(configuration).updateRouteById(id, updateRouteRequest, options)(axios, basePath);\n        },\n    };\n};\n\n/**\n * RouteApi - object-oriented interface\n * @export\n * @class RouteApi\n * @extends {BaseAPI}\n */\nexport class RouteApi extends BaseAPI {\n    /**\n     * \n     * @param {CreateRouteRequest} [createRouteRequest] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RouteApi\n     */\n    public createRoute(createRouteRequest?: CreateRouteRequest, options?: any) {\n        return RouteApiFp(this.configuration).createRoute(createRouteRequest, options)(this.axios, this.basePath);\n    }\n\n    /**\n     * \n     * @param {string} id \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RouteApi\n     */\n    public deleteRouteById(id: string, options?: any) {\n        return RouteApiFp(this.configuration).deleteRouteById(id, options)(this.axios, this.basePath);\n    }\n\n    /**\n     * \n     * @summary Your GET endpoint\n     * @param {string} id \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RouteApi\n     */\n    public getRouteById(id: string, options?: any) {\n        return RouteApiFp(this.configuration).getRouteById(id, options)(this.axios, this.basePath);\n    }\n\n    /**\n     * \n     * @param {string} routeId \n     * @param {string} groupId \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RouteApi\n     */\n    public shareInGroup(routeId: string, groupId: string, options?: any) {\n        return RouteApiFp(this.configuration).shareInGroup(routeId, groupId, options)(this.axios, this.basePath);\n    }\n\n    /**\n     * \n     * @param {string} id \n     * @param {UpdateRouteRequest} [updateRouteRequest] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RouteApi\n     */\n    public updateRouteById(id: string, updateRouteRequest?: UpdateRouteRequest, options?: any) {\n        return RouteApiFp(this.configuration).updateRouteById(id, updateRouteRequest, options)(this.axios, this.basePath);\n    }\n\n}\n\n\n","module.exports = require(\"url\");","// tslint:disable\n/**\n * swagger\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport { Configuration } from \"./configuration\";\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport globalAxios, { AxiosPromise, AxiosInstance } from 'axios';\n\nexport const BASE_PATH = \"http://localhost:3000\".replace(/\\/+$/, \"\");\n\n/**\n *\n * @export\n */\nexport const COLLECTION_FORMATS = {\n    csv: \",\",\n    ssv: \" \",\n    tsv: \"\\t\",\n    pipes: \"|\",\n};\n\n/**\n *\n * @export\n * @interface RequestArgs\n */\nexport interface RequestArgs {\n    url: string;\n    options: any;\n}\n\n/**\n *\n * @export\n * @class BaseAPI\n */\nexport class BaseAPI {\n    protected configuration: Configuration | undefined;\n\n    constructor(configuration?: Configuration, protected basePath: string = BASE_PATH, protected axios: AxiosInstance = globalAxios) {\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = configuration.basePath || this.basePath;\n        }\n    }\n};\n\n/**\n *\n * @export\n * @class RequiredError\n * @extends {Error}\n */\nexport class RequiredError extends Error {\n    name: \"RequiredError\" = \"RequiredError\";\n    constructor(public field: string, msg?: string) {\n        super(msg);\n    }\n}\n","/**\n * swagger\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport class AuditDto {\n    'createdBy'?: string;\n    'createdAt'?: string;\n    'modifiedBy'?: string;\n    'modifiedAt'?: string;\n\n    static discriminator: string | undefined = undefined;\n\n    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [\n        {\n            \"name\": \"createdBy\",\n            \"baseName\": \"createdBy\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"createdAt\",\n            \"baseName\": \"createdAt\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"modifiedBy\",\n            \"baseName\": \"modifiedBy\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"modifiedAt\",\n            \"baseName\": \"modifiedAt\",\n            \"type\": \"string\"\n        }    ];\n\n    static getAttributeTypeMap() {\n        return AuditDto.attributeTypeMap;\n    }\n}\n\n","/**\n * swagger\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport class CreateGroupRequest {\n    'name'?: string;\n    'description'?: string;\n    'access'?: string;\n\n    static discriminator: string | undefined = undefined;\n\n    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [\n        {\n            \"name\": \"name\",\n            \"baseName\": \"name\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"description\",\n            \"baseName\": \"description\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"access\",\n            \"baseName\": \"access\",\n            \"type\": \"string\"\n        }    ];\n\n    static getAttributeTypeMap() {\n        return CreateGroupRequest.attributeTypeMap;\n    }\n}\n\n","/**\n * swagger\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { LineStringDto } from './lineStringDto';\n\nexport class CreateRouteRequest {\n    'title'?: string;\n    'description'?: string;\n    'path'?: LineStringDto;\n\n    static discriminator: string | undefined = undefined;\n\n    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [\n        {\n            \"name\": \"title\",\n            \"baseName\": \"title\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"description\",\n            \"baseName\": \"description\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"path\",\n            \"baseName\": \"path\",\n            \"type\": \"LineStringDto\"\n        }    ];\n\n    static getAttributeTypeMap() {\n        return CreateRouteRequest.attributeTypeMap;\n    }\n}\n\n","/**\n * swagger\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport class ErrorResponse {\n    'cause': string;\n    'message'?: string;\n\n    static discriminator: string | undefined = undefined;\n\n    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [\n        {\n            \"name\": \"cause\",\n            \"baseName\": \"cause\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"message\",\n            \"baseName\": \"message\",\n            \"type\": \"string\"\n        }    ];\n\n    static getAttributeTypeMap() {\n        return ErrorResponse.attributeTypeMap;\n    }\n}\n\n","/**\n * swagger\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport class GroupResponse {\n    'name'?: string;\n    'description'?: string;\n    'access'?: string;\n\n    static discriminator: string | undefined = undefined;\n\n    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [\n        {\n            \"name\": \"name\",\n            \"baseName\": \"name\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"description\",\n            \"baseName\": \"description\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"access\",\n            \"baseName\": \"access\",\n            \"type\": \"string\"\n        }    ];\n\n    static getAttributeTypeMap() {\n        return GroupResponse.attributeTypeMap;\n    }\n}\n\n","/**\n * swagger\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport class LineStringDto {\n    'type'?: string;\n    'coordinates'?: Array<Array<number>>;\n\n    static discriminator: string | undefined = undefined;\n\n    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [\n        {\n            \"name\": \"type\",\n            \"baseName\": \"type\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"coordinates\",\n            \"baseName\": \"coordinates\",\n            \"type\": \"Array<Array<number>>\"\n        }    ];\n\n    static getAttributeTypeMap() {\n        return LineStringDto.attributeTypeMap;\n    }\n}\n\n","/**\n * swagger\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport class LoginRequest {\n    'email'?: string;\n    'password'?: string;\n    'clientId'?: string;\n    'redirectUri'?: string;\n\n    static discriminator: string | undefined = undefined;\n\n    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [\n        {\n            \"name\": \"email\",\n            \"baseName\": \"email\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"password\",\n            \"baseName\": \"password\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"clientId\",\n            \"baseName\": \"clientId\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"redirectUri\",\n            \"baseName\": \"redirectUri\",\n            \"type\": \"string\"\n        }    ];\n\n    static getAttributeTypeMap() {\n        return LoginRequest.attributeTypeMap;\n    }\n}\n\n","/**\n * swagger\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport class LoginResponse {\n    'code'?: string;\n    'redirectUri'?: string;\n\n    static discriminator: string | undefined = undefined;\n\n    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [\n        {\n            \"name\": \"code\",\n            \"baseName\": \"code\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"redirectUri\",\n            \"baseName\": \"redirectUri\",\n            \"type\": \"string\"\n        }    ];\n\n    static getAttributeTypeMap() {\n        return LoginResponse.attributeTypeMap;\n    }\n}\n\n","/**\n * swagger\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport class RegistrationRequest {\n    'email': string;\n    'password': string;\n\n    static discriminator: string | undefined = undefined;\n\n    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [\n        {\n            \"name\": \"email\",\n            \"baseName\": \"email\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"password\",\n            \"baseName\": \"password\",\n            \"type\": \"string\"\n        }    ];\n\n    static getAttributeTypeMap() {\n        return RegistrationRequest.attributeTypeMap;\n    }\n}\n\n","/**\n * swagger\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport class RegistrationResponse {\n    'userId'?: string;\n\n    static discriminator: string | undefined = undefined;\n\n    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [\n        {\n            \"name\": \"userId\",\n            \"baseName\": \"userId\",\n            \"type\": \"string\"\n        }    ];\n\n    static getAttributeTypeMap() {\n        return RegistrationResponse.attributeTypeMap;\n    }\n}\n\n","/**\n * swagger\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { AuditDto } from './auditDto';\nimport { LineStringDto } from './lineStringDto';\n\nexport class RouteResponse {\n    'title'?: string;\n    'description'?: string;\n    'path'?: LineStringDto;\n    'audit'?: AuditDto;\n\n    static discriminator: string | undefined = undefined;\n\n    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [\n        {\n            \"name\": \"title\",\n            \"baseName\": \"title\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"description\",\n            \"baseName\": \"description\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"path\",\n            \"baseName\": \"path\",\n            \"type\": \"LineStringDto\"\n        },\n        {\n            \"name\": \"audit\",\n            \"baseName\": \"audit\",\n            \"type\": \"AuditDto\"\n        }    ];\n\n    static getAttributeTypeMap() {\n        return RouteResponse.attributeTypeMap;\n    }\n}\n\n","/**\n * swagger\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport class TokenResponse {\n    'accessToken'?: string;\n    'accessTokenExpiration'?: string;\n    'refreshToken'?: string;\n    'refreshTokenExpiration'?: string;\n\n    static discriminator: string | undefined = undefined;\n\n    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [\n        {\n            \"name\": \"accessToken\",\n            \"baseName\": \"accessToken\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"accessTokenExpiration\",\n            \"baseName\": \"accessTokenExpiration\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"refreshToken\",\n            \"baseName\": \"refreshToken\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"refreshTokenExpiration\",\n            \"baseName\": \"refreshTokenExpiration\",\n            \"type\": \"string\"\n        }    ];\n\n    static getAttributeTypeMap() {\n        return TokenResponse.attributeTypeMap;\n    }\n}\n\n","/**\n * swagger\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport class UpdateGroupRequest {\n    'name'?: string;\n    'description'?: string;\n    'access'?: string;\n\n    static discriminator: string | undefined = undefined;\n\n    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [\n        {\n            \"name\": \"name\",\n            \"baseName\": \"name\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"description\",\n            \"baseName\": \"description\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"access\",\n            \"baseName\": \"access\",\n            \"type\": \"string\"\n        }    ];\n\n    static getAttributeTypeMap() {\n        return UpdateGroupRequest.attributeTypeMap;\n    }\n}\n\n","/**\n * swagger\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { LineStringDto } from './lineStringDto';\n\nexport class UpdateRouteRequest {\n    'title'?: string;\n    'description'?: string;\n    'path'?: LineStringDto;\n\n    static discriminator: string | undefined = undefined;\n\n    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [\n        {\n            \"name\": \"title\",\n            \"baseName\": \"title\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"description\",\n            \"baseName\": \"description\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"path\",\n            \"baseName\": \"path\",\n            \"type\": \"LineStringDto\"\n        }    ];\n\n    static getAttributeTypeMap() {\n        return UpdateRouteRequest.attributeTypeMap;\n    }\n}\n\n"],"sourceRoot":""}