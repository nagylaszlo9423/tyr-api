{"version":3,"sources":["webpack://tyr-map/webpack/universalModuleDefinition","webpack://tyr-map/webpack/bootstrap","webpack://tyr-map/external \"axios\"","webpack://tyr-map/./src/index.ts","webpack://tyr-map/./src/axios/api.ts","webpack://tyr-map/external \"url\"","webpack://tyr-map/./src/axios/base.ts","webpack://tyr-map/./src/node/model/auditDto.ts","webpack://tyr-map/./src/node/model/createGroupRequest.ts","webpack://tyr-map/./src/node/model/createRouteRequest.ts","webpack://tyr-map/./src/node/model/errorResponse.ts","webpack://tyr-map/./src/node/model/groupResponse.ts","webpack://tyr-map/./src/node/model/lineStringDto.ts","webpack://tyr-map/./src/node/model/loginRequest.ts","webpack://tyr-map/./src/node/model/loginResponse.ts","webpack://tyr-map/./src/node/model/pageResponse.ts","webpack://tyr-map/./src/node/model/registrationRequest.ts","webpack://tyr-map/./src/node/model/registrationResponse.ts","webpack://tyr-map/./src/node/model/routeResponse.ts","webpack://tyr-map/./src/node/model/tokenResponse.ts","webpack://tyr-map/./src/node/model/updateGroupRequest.ts","webpack://tyr-map/./src/node/model/updateRouteRequest.ts"],"names":["root","factory","exports","module","define","amd","global","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","AxiosApi","axiosApi","DefaultApiAxiosParamCreator","configuration","getGroupsPaged","options","baseOptions","localVarUrlObj","globalImportUrl","parse","localVarRequestOptions","method","query","search","headers","url","format","DefaultApiFp","localVarAxiosArgs","axios","basePath","BASE_PATH","axiosRequestArgs","request","DefaultApiFactory","this","BaseAPI","DefaultApi","GroupApiAxiosParamCreator","createGroup","createGroupRequest","localVarHeaderParameter","needsSerialization","data","JSON","stringify","undefined","findById","groupId","RequiredError","localVarPath","replace","encodeURIComponent","String","groupGroupIdDelete","joinGroup","leaveGroup","updateGroup","updateGroupRequest","GroupApiFp","GroupApiFactory","GroupApi","OauthApiAxiosParamCreator","authorize","responseType","clientId","redirectUri","localVarQueryParameter","login","loginRequest","logout","authorization","register","registrationRequest","token","grantType","code","refreshToken","OauthApiFp","OauthApiFactory","OauthApi","RouteApiAxiosParamCreator","createRoute","createRouteRequest","deleteRouteById","id","getRouteById","shareInGroup","routeId","updateRouteById","updateRouteRequest","RouteApiFp","RouteApiFactory","RouteApi","COLLECTION_FORMATS","csv","ssv","tsv","pipes","field","msg","Error","getAttributeTypeMap","AuditDto","attributeTypeMap","discriminator","CreateGroupRequest","CreateRouteRequest","ErrorResponse","GroupResponse","LineStringDto","LoginRequest","LoginResponse","PageResponse","RegistrationRequest","RegistrationResponse","RouteResponse","TokenResponse","UpdateGroupRequest","UpdateRouteRequest"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"tyr-map\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"tyr-map\"] = factory();\n\telse\n\t\troot[\"tyr-map\"] = factory();\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = require(\"axios\");","import * as axiosApi from './axios/api';\r\nexport const AxiosApi = axiosApi;\r\nexport * from './node/model/auditDto';\r\nexport * from './node/model/createGroupRequest';\r\nexport * from './node/model/createRouteRequest';\r\nexport * from './node/model/errorResponse';\r\nexport * from './node/model/groupResponse';\r\nexport * from './node/model/lineStringDto';\r\nexport * from './node/model/loginRequest';\r\nexport * from './node/model/loginResponse';\r\nexport * from './node/model/pageResponse';\r\nexport * from './node/model/registrationRequest';\r\nexport * from './node/model/registrationResponse';\r\nexport * from './node/model/routeResponse';\r\nexport * from './node/model/tokenResponse';\r\nexport * from './node/model/updateGroupRequest';\r\nexport * from './node/model/updateRouteRequest';\r\n","// tslint:disable\n/**\n * swagger\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as globalImportUrl from 'url';\nimport { Configuration } from './configuration';\nimport globalAxios, { AxiosPromise, AxiosInstance } from 'axios';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from './base';\n\n/**\n * \n * @export\n * @interface AuditDto\n */\nexport interface AuditDto {\n    /**\n     * \n     * @type {string}\n     * @memberof AuditDto\n     */\n    createdBy?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof AuditDto\n     */\n    createdAt?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof AuditDto\n     */\n    modifiedBy?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof AuditDto\n     */\n    modifiedAt?: string;\n}\n/**\n * \n * @export\n * @interface CreateGroupRequest\n */\nexport interface CreateGroupRequest {\n    /**\n     * \n     * @type {string}\n     * @memberof CreateGroupRequest\n     */\n    name?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof CreateGroupRequest\n     */\n    description?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof CreateGroupRequest\n     */\n    access?: string;\n}\n/**\n * \n * @export\n * @interface CreateRouteRequest\n */\nexport interface CreateRouteRequest {\n    /**\n     * \n     * @type {string}\n     * @memberof CreateRouteRequest\n     */\n    title?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof CreateRouteRequest\n     */\n    description?: string;\n    /**\n     * \n     * @type {LineStringDto}\n     * @memberof CreateRouteRequest\n     */\n    path?: LineStringDto;\n}\n/**\n * \n * @export\n * @interface ErrorResponse\n */\nexport interface ErrorResponse {\n    /**\n     * \n     * @type {string}\n     * @memberof ErrorResponse\n     */\n    cause: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ErrorResponse\n     */\n    message?: string;\n}\n/**\n * \n * @export\n * @interface GroupResponse\n */\nexport interface GroupResponse {\n    /**\n     * \n     * @type {string}\n     * @memberof GroupResponse\n     */\n    name?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof GroupResponse\n     */\n    description?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof GroupResponse\n     */\n    access?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof GroupResponse\n     */\n    owner?: string;\n}\n/**\n * \n * @export\n * @interface LineStringDto\n */\nexport interface LineStringDto {\n    /**\n     * \n     * @type {string}\n     * @memberof LineStringDto\n     */\n    type?: string;\n    /**\n     * \n     * @type {Array<Array<number>>}\n     * @memberof LineStringDto\n     */\n    coordinates?: Array<Array<number>>;\n}\n/**\n * \n * @export\n * @interface LoginRequest\n */\nexport interface LoginRequest {\n    /**\n     * \n     * @type {string}\n     * @memberof LoginRequest\n     */\n    email?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof LoginRequest\n     */\n    password?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof LoginRequest\n     */\n    clientId?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof LoginRequest\n     */\n    redirectUri?: string;\n}\n/**\n * \n * @export\n * @interface LoginResponse\n */\nexport interface LoginResponse {\n    /**\n     * \n     * @type {string}\n     * @memberof LoginResponse\n     */\n    code?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof LoginResponse\n     */\n    redirectUri?: string;\n}\n/**\n * \n * @export\n * @interface PageResponse\n */\nexport interface PageResponse {\n    /**\n     * \n     * @type {number}\n     * @memberof PageResponse\n     */\n    page?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof PageResponse\n     */\n    size?: number;\n    /**\n     * \n     * @type {Array<object>}\n     * @memberof PageResponse\n     */\n    items?: Array<object>;\n}\n/**\n * \n * @export\n * @interface RegistrationRequest\n */\nexport interface RegistrationRequest {\n    /**\n     * \n     * @type {string}\n     * @memberof RegistrationRequest\n     */\n    email: string;\n    /**\n     * \n     * @type {string}\n     * @memberof RegistrationRequest\n     */\n    password: string;\n}\n/**\n * \n * @export\n * @interface RegistrationResponse\n */\nexport interface RegistrationResponse {\n    /**\n     * \n     * @type {string}\n     * @memberof RegistrationResponse\n     */\n    userId?: string;\n}\n/**\n * \n * @export\n * @interface RouteResponse\n */\nexport interface RouteResponse {\n    /**\n     * \n     * @type {string}\n     * @memberof RouteResponse\n     */\n    title?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof RouteResponse\n     */\n    description?: string;\n    /**\n     * \n     * @type {LineStringDto}\n     * @memberof RouteResponse\n     */\n    path?: LineStringDto;\n    /**\n     * \n     * @type {AuditDto}\n     * @memberof RouteResponse\n     */\n    audit?: AuditDto;\n}\n/**\n * \n * @export\n * @interface TokenResponse\n */\nexport interface TokenResponse {\n    /**\n     * \n     * @type {string}\n     * @memberof TokenResponse\n     */\n    accessToken?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof TokenResponse\n     */\n    accessTokenExpiration?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof TokenResponse\n     */\n    refreshToken?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof TokenResponse\n     */\n    refreshTokenExpiration?: string;\n}\n/**\n * \n * @export\n * @interface UpdateGroupRequest\n */\nexport interface UpdateGroupRequest {\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateGroupRequest\n     */\n    name?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateGroupRequest\n     */\n    description?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateGroupRequest\n     */\n    access?: string;\n}\n/**\n * \n * @export\n * @interface UpdateRouteRequest\n */\nexport interface UpdateRouteRequest {\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateRouteRequest\n     */\n    title?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof UpdateRouteRequest\n     */\n    description?: string;\n    /**\n     * \n     * @type {LineStringDto}\n     * @memberof UpdateRouteRequest\n     */\n    path?: LineStringDto;\n}\n\n/**\n * DefaultApi - axios parameter creator\n * @export\n */\nexport const DefaultApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary getGroupsPaged\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getGroupsPaged(options: any = {}): RequestArgs {\n            const localVarPath = `/group/page`;\n            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...options.headers};\n\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * DefaultApi - functional programming interface\n * @export\n */\nexport const DefaultApiFp = function(configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary getGroupsPaged\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getGroupsPaged(options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<PageResponse> {\n            const localVarAxiosArgs = DefaultApiAxiosParamCreator(configuration).getGroupsPaged(options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n    }\n};\n\n/**\n * DefaultApi - factory interface\n * @export\n */\nexport const DefaultApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    return {\n        /**\n         * \n         * @summary getGroupsPaged\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getGroupsPaged(options?: any) {\n            return DefaultApiFp(configuration).getGroupsPaged(options)(axios, basePath);\n        },\n    };\n};\n\n/**\n * DefaultApi - object-oriented interface\n * @export\n * @class DefaultApi\n * @extends {BaseAPI}\n */\nexport class DefaultApi extends BaseAPI {\n    /**\n     * \n     * @summary getGroupsPaged\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public getGroupsPaged(options?: any) {\n        return DefaultApiFp(this.configuration).getGroupsPaged(options)(this.axios, this.basePath);\n    }\n\n}\n\n\n/**\n * GroupApi - axios parameter creator\n * @export\n */\nexport const GroupApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary createGroup\n         * @param {CreateGroupRequest} [createGroupRequest] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createGroup(createGroupRequest?: CreateGroupRequest, options: any = {}): RequestArgs {\n            const localVarPath = `/group`;\n            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...options.headers};\n            const needsSerialization = (typeof createGroupRequest !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(createGroupRequest !== undefined ? createGroupRequest : {}) : (createGroupRequest || \"\");\n\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary findById\n         * @param {string} groupId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        findById(groupId: string, options: any = {}): RequestArgs {\n            // verify required parameter 'groupId' is not null or undefined\n            if (groupId === null || groupId === undefined) {\n                throw new RequiredError('groupId','Required parameter groupId was null or undefined when calling findById.');\n            }\n            const localVarPath = `/group/{groupId}`\n                .replace(`{${\"groupId\"}}`, encodeURIComponent(String(groupId)));\n            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...options.headers};\n\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {string} groupId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        groupGroupIdDelete(groupId: string, options: any = {}): RequestArgs {\n            // verify required parameter 'groupId' is not null or undefined\n            if (groupId === null || groupId === undefined) {\n                throw new RequiredError('groupId','Required parameter groupId was null or undefined when calling groupGroupIdDelete.');\n            }\n            const localVarPath = `/group/{groupId}`\n                .replace(`{${\"groupId\"}}`, encodeURIComponent(String(groupId)));\n            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...options.headers};\n\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary joinGroup\n         * @param {string} groupId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        joinGroup(groupId: string, options: any = {}): RequestArgs {\n            // verify required parameter 'groupId' is not null or undefined\n            if (groupId === null || groupId === undefined) {\n                throw new RequiredError('groupId','Required parameter groupId was null or undefined when calling joinGroup.');\n            }\n            const localVarPath = `/group/{groupId}/join`\n                .replace(`{${\"groupId\"}}`, encodeURIComponent(String(groupId)));\n            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...options.headers};\n\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary leaveGroup\n         * @param {string} groupId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        leaveGroup(groupId: string, options: any = {}): RequestArgs {\n            // verify required parameter 'groupId' is not null or undefined\n            if (groupId === null || groupId === undefined) {\n                throw new RequiredError('groupId','Required parameter groupId was null or undefined when calling leaveGroup.');\n            }\n            const localVarPath = `/group/{groupId}/leave`\n                .replace(`{${\"groupId\"}}`, encodeURIComponent(String(groupId)));\n            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...options.headers};\n\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary updateGroup\n         * @param {string} groupId \n         * @param {UpdateGroupRequest} [updateGroupRequest] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateGroup(groupId: string, updateGroupRequest?: UpdateGroupRequest, options: any = {}): RequestArgs {\n            // verify required parameter 'groupId' is not null or undefined\n            if (groupId === null || groupId === undefined) {\n                throw new RequiredError('groupId','Required parameter groupId was null or undefined when calling updateGroup.');\n            }\n            const localVarPath = `/group/{groupId}`\n                .replace(`{${\"groupId\"}}`, encodeURIComponent(String(groupId)));\n            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...options.headers};\n            const needsSerialization = (typeof updateGroupRequest !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(updateGroupRequest !== undefined ? updateGroupRequest : {}) : (updateGroupRequest || \"\");\n\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * GroupApi - functional programming interface\n * @export\n */\nexport const GroupApiFp = function(configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @summary createGroup\n         * @param {CreateGroupRequest} [createGroupRequest] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createGroup(createGroupRequest?: CreateGroupRequest, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<string> {\n            const localVarAxiosArgs = GroupApiAxiosParamCreator(configuration).createGroup(createGroupRequest, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary findById\n         * @param {string} groupId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        findById(groupId: string, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<GroupResponse> {\n            const localVarAxiosArgs = GroupApiAxiosParamCreator(configuration).findById(groupId, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {string} groupId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        groupGroupIdDelete(groupId: string, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<void> {\n            const localVarAxiosArgs = GroupApiAxiosParamCreator(configuration).groupGroupIdDelete(groupId, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary joinGroup\n         * @param {string} groupId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        joinGroup(groupId: string, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<void> {\n            const localVarAxiosArgs = GroupApiAxiosParamCreator(configuration).joinGroup(groupId, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary leaveGroup\n         * @param {string} groupId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        leaveGroup(groupId: string, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<void> {\n            const localVarAxiosArgs = GroupApiAxiosParamCreator(configuration).leaveGroup(groupId, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary updateGroup\n         * @param {string} groupId \n         * @param {UpdateGroupRequest} [updateGroupRequest] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateGroup(groupId: string, updateGroupRequest?: UpdateGroupRequest, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<void> {\n            const localVarAxiosArgs = GroupApiAxiosParamCreator(configuration).updateGroup(groupId, updateGroupRequest, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n    }\n};\n\n/**\n * GroupApi - factory interface\n * @export\n */\nexport const GroupApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    return {\n        /**\n         * \n         * @summary createGroup\n         * @param {CreateGroupRequest} [createGroupRequest] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createGroup(createGroupRequest?: CreateGroupRequest, options?: any) {\n            return GroupApiFp(configuration).createGroup(createGroupRequest, options)(axios, basePath);\n        },\n        /**\n         * \n         * @summary findById\n         * @param {string} groupId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        findById(groupId: string, options?: any) {\n            return GroupApiFp(configuration).findById(groupId, options)(axios, basePath);\n        },\n        /**\n         * \n         * @param {string} groupId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        groupGroupIdDelete(groupId: string, options?: any) {\n            return GroupApiFp(configuration).groupGroupIdDelete(groupId, options)(axios, basePath);\n        },\n        /**\n         * \n         * @summary joinGroup\n         * @param {string} groupId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        joinGroup(groupId: string, options?: any) {\n            return GroupApiFp(configuration).joinGroup(groupId, options)(axios, basePath);\n        },\n        /**\n         * \n         * @summary leaveGroup\n         * @param {string} groupId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        leaveGroup(groupId: string, options?: any) {\n            return GroupApiFp(configuration).leaveGroup(groupId, options)(axios, basePath);\n        },\n        /**\n         * \n         * @summary updateGroup\n         * @param {string} groupId \n         * @param {UpdateGroupRequest} [updateGroupRequest] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateGroup(groupId: string, updateGroupRequest?: UpdateGroupRequest, options?: any) {\n            return GroupApiFp(configuration).updateGroup(groupId, updateGroupRequest, options)(axios, basePath);\n        },\n    };\n};\n\n/**\n * GroupApi - object-oriented interface\n * @export\n * @class GroupApi\n * @extends {BaseAPI}\n */\nexport class GroupApi extends BaseAPI {\n    /**\n     * \n     * @summary createGroup\n     * @param {CreateGroupRequest} [createGroupRequest] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    public createGroup(createGroupRequest?: CreateGroupRequest, options?: any) {\n        return GroupApiFp(this.configuration).createGroup(createGroupRequest, options)(this.axios, this.basePath);\n    }\n\n    /**\n     * \n     * @summary findById\n     * @param {string} groupId \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    public findById(groupId: string, options?: any) {\n        return GroupApiFp(this.configuration).findById(groupId, options)(this.axios, this.basePath);\n    }\n\n    /**\n     * \n     * @param {string} groupId \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    public groupGroupIdDelete(groupId: string, options?: any) {\n        return GroupApiFp(this.configuration).groupGroupIdDelete(groupId, options)(this.axios, this.basePath);\n    }\n\n    /**\n     * \n     * @summary joinGroup\n     * @param {string} groupId \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    public joinGroup(groupId: string, options?: any) {\n        return GroupApiFp(this.configuration).joinGroup(groupId, options)(this.axios, this.basePath);\n    }\n\n    /**\n     * \n     * @summary leaveGroup\n     * @param {string} groupId \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    public leaveGroup(groupId: string, options?: any) {\n        return GroupApiFp(this.configuration).leaveGroup(groupId, options)(this.axios, this.basePath);\n    }\n\n    /**\n     * \n     * @summary updateGroup\n     * @param {string} groupId \n     * @param {UpdateGroupRequest} [updateGroupRequest] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GroupApi\n     */\n    public updateGroup(groupId: string, updateGroupRequest?: UpdateGroupRequest, options?: any) {\n        return GroupApiFp(this.configuration).updateGroup(groupId, updateGroupRequest, options)(this.axios, this.basePath);\n    }\n\n}\n\n\n/**\n * OauthApi - axios parameter creator\n * @export\n */\nexport const OauthApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @param {string} [responseType] \n         * @param {string} [clientId] \n         * @param {string} [redirectUri] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        authorize(responseType?: string, clientId?: string, redirectUri?: string, options: any = {}): RequestArgs {\n            const localVarPath = `/oauth/authorize`;\n            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (responseType !== undefined) {\n                localVarQueryParameter['response_type'] = responseType;\n            }\n\n            if (clientId !== undefined) {\n                localVarQueryParameter['client_id'] = clientId;\n            }\n\n            if (redirectUri !== undefined) {\n                localVarQueryParameter['redirect_uri'] = redirectUri;\n            }\n\n\n    \n            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...options.headers};\n\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {LoginRequest} [loginRequest] LoginRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        login(loginRequest?: LoginRequest, options: any = {}): RequestArgs {\n            const localVarPath = `/oauth/login`;\n            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...options.headers};\n            const needsSerialization = (typeof loginRequest !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(loginRequest !== undefined ? loginRequest : {}) : (loginRequest || \"\");\n\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {string} [authorization] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        logout(authorization?: string, options: any = {}): RequestArgs {\n            const localVarPath = `/oauth/logout`;\n            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (authorization !== undefined && authorization !== null) {\n                localVarHeaderParameter['Authorization'] = String(authorization);\n            }\n\n\n    \n            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...options.headers};\n\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {RegistrationRequest} [registrationRequest] RegistrationRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        register(registrationRequest?: RegistrationRequest, options: any = {}): RequestArgs {\n            const localVarPath = `/oauth/register`;\n            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...options.headers};\n            const needsSerialization = (typeof registrationRequest !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(registrationRequest !== undefined ? registrationRequest : {}) : (registrationRequest || \"\");\n\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {string} [grantType] \n         * @param {string} [code] \n         * @param {string} [redirectUri] \n         * @param {string} [clientId] \n         * @param {string} [refreshToken] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        token(grantType?: string, code?: string, redirectUri?: string, clientId?: string, refreshToken?: string, options: any = {}): RequestArgs {\n            const localVarPath = `/oauth/token`;\n            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (grantType !== undefined) {\n                localVarQueryParameter['grant_type'] = grantType;\n            }\n\n            if (code !== undefined) {\n                localVarQueryParameter['code'] = code;\n            }\n\n            if (redirectUri !== undefined) {\n                localVarQueryParameter['redirect_uri'] = redirectUri;\n            }\n\n            if (clientId !== undefined) {\n                localVarQueryParameter['client_id'] = clientId;\n            }\n\n            if (refreshToken !== undefined) {\n                localVarQueryParameter['refresh_token'] = refreshToken;\n            }\n\n\n    \n            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...options.headers};\n\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * OauthApi - functional programming interface\n * @export\n */\nexport const OauthApiFp = function(configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @param {string} [responseType] \n         * @param {string} [clientId] \n         * @param {string} [redirectUri] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        authorize(responseType?: string, clientId?: string, redirectUri?: string, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<void> {\n            const localVarAxiosArgs = OauthApiAxiosParamCreator(configuration).authorize(responseType, clientId, redirectUri, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {LoginRequest} [loginRequest] LoginRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        login(loginRequest?: LoginRequest, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<LoginResponse> {\n            const localVarAxiosArgs = OauthApiAxiosParamCreator(configuration).login(loginRequest, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {string} [authorization] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        logout(authorization?: string, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<void> {\n            const localVarAxiosArgs = OauthApiAxiosParamCreator(configuration).logout(authorization, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {RegistrationRequest} [registrationRequest] RegistrationRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        register(registrationRequest?: RegistrationRequest, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<RegistrationResponse> {\n            const localVarAxiosArgs = OauthApiAxiosParamCreator(configuration).register(registrationRequest, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {string} [grantType] \n         * @param {string} [code] \n         * @param {string} [redirectUri] \n         * @param {string} [clientId] \n         * @param {string} [refreshToken] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        token(grantType?: string, code?: string, redirectUri?: string, clientId?: string, refreshToken?: string, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<TokenResponse> {\n            const localVarAxiosArgs = OauthApiAxiosParamCreator(configuration).token(grantType, code, redirectUri, clientId, refreshToken, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n    }\n};\n\n/**\n * OauthApi - factory interface\n * @export\n */\nexport const OauthApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    return {\n        /**\n         * \n         * @param {string} [responseType] \n         * @param {string} [clientId] \n         * @param {string} [redirectUri] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        authorize(responseType?: string, clientId?: string, redirectUri?: string, options?: any) {\n            return OauthApiFp(configuration).authorize(responseType, clientId, redirectUri, options)(axios, basePath);\n        },\n        /**\n         * \n         * @param {LoginRequest} [loginRequest] LoginRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        login(loginRequest?: LoginRequest, options?: any) {\n            return OauthApiFp(configuration).login(loginRequest, options)(axios, basePath);\n        },\n        /**\n         * \n         * @param {string} [authorization] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        logout(authorization?: string, options?: any) {\n            return OauthApiFp(configuration).logout(authorization, options)(axios, basePath);\n        },\n        /**\n         * \n         * @param {RegistrationRequest} [registrationRequest] RegistrationRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        register(registrationRequest?: RegistrationRequest, options?: any) {\n            return OauthApiFp(configuration).register(registrationRequest, options)(axios, basePath);\n        },\n        /**\n         * \n         * @param {string} [grantType] \n         * @param {string} [code] \n         * @param {string} [redirectUri] \n         * @param {string} [clientId] \n         * @param {string} [refreshToken] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        token(grantType?: string, code?: string, redirectUri?: string, clientId?: string, refreshToken?: string, options?: any) {\n            return OauthApiFp(configuration).token(grantType, code, redirectUri, clientId, refreshToken, options)(axios, basePath);\n        },\n    };\n};\n\n/**\n * OauthApi - object-oriented interface\n * @export\n * @class OauthApi\n * @extends {BaseAPI}\n */\nexport class OauthApi extends BaseAPI {\n    /**\n     * \n     * @param {string} [responseType] \n     * @param {string} [clientId] \n     * @param {string} [redirectUri] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OauthApi\n     */\n    public authorize(responseType?: string, clientId?: string, redirectUri?: string, options?: any) {\n        return OauthApiFp(this.configuration).authorize(responseType, clientId, redirectUri, options)(this.axios, this.basePath);\n    }\n\n    /**\n     * \n     * @param {LoginRequest} [loginRequest] LoginRequest\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OauthApi\n     */\n    public login(loginRequest?: LoginRequest, options?: any) {\n        return OauthApiFp(this.configuration).login(loginRequest, options)(this.axios, this.basePath);\n    }\n\n    /**\n     * \n     * @param {string} [authorization] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OauthApi\n     */\n    public logout(authorization?: string, options?: any) {\n        return OauthApiFp(this.configuration).logout(authorization, options)(this.axios, this.basePath);\n    }\n\n    /**\n     * \n     * @param {RegistrationRequest} [registrationRequest] RegistrationRequest\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OauthApi\n     */\n    public register(registrationRequest?: RegistrationRequest, options?: any) {\n        return OauthApiFp(this.configuration).register(registrationRequest, options)(this.axios, this.basePath);\n    }\n\n    /**\n     * \n     * @param {string} [grantType] \n     * @param {string} [code] \n     * @param {string} [redirectUri] \n     * @param {string} [clientId] \n     * @param {string} [refreshToken] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OauthApi\n     */\n    public token(grantType?: string, code?: string, redirectUri?: string, clientId?: string, refreshToken?: string, options?: any) {\n        return OauthApiFp(this.configuration).token(grantType, code, redirectUri, clientId, refreshToken, options)(this.axios, this.basePath);\n    }\n\n}\n\n\n/**\n * RouteApi - axios parameter creator\n * @export\n */\nexport const RouteApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @param {CreateRouteRequest} [createRouteRequest] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createRoute(createRouteRequest?: CreateRouteRequest, options: any = {}): RequestArgs {\n            const localVarPath = `/route`;\n            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...options.headers};\n            const needsSerialization = (typeof createRouteRequest !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(createRouteRequest !== undefined ? createRouteRequest : {}) : (createRouteRequest || \"\");\n\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {string} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteRouteById(id: string, options: any = {}): RequestArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling deleteRouteById.');\n            }\n            const localVarPath = `/route/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...options.headers};\n\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @summary Your GET endpoint\n         * @param {string} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getRouteById(id: string, options: any = {}): RequestArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling getRouteById.');\n            }\n            const localVarPath = `/route/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...options.headers};\n\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {string} routeId \n         * @param {string} groupId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        shareInGroup(routeId: string, groupId: string, options: any = {}): RequestArgs {\n            // verify required parameter 'routeId' is not null or undefined\n            if (routeId === null || routeId === undefined) {\n                throw new RequiredError('routeId','Required parameter routeId was null or undefined when calling shareInGroup.');\n            }\n            // verify required parameter 'groupId' is not null or undefined\n            if (groupId === null || groupId === undefined) {\n                throw new RequiredError('groupId','Required parameter groupId was null or undefined when calling shareInGroup.');\n            }\n            const localVarPath = `/route/{routeId}/share-in-group/{groupId}`\n                .replace(`{${\"routeId\"}}`, encodeURIComponent(String(routeId)))\n                .replace(`{${\"groupId\"}}`, encodeURIComponent(String(groupId)));\n            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...options.headers};\n\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {string} id \n         * @param {UpdateRouteRequest} [updateRouteRequest] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateRouteById(id: string, updateRouteRequest?: UpdateRouteRequest, options: any = {}): RequestArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling updateRouteById.');\n            }\n            const localVarPath = `/route/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            delete localVarUrlObj.search;\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...options.headers};\n            const needsSerialization = (typeof updateRouteRequest !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.data =  needsSerialization ? JSON.stringify(updateRouteRequest !== undefined ? updateRouteRequest : {}) : (updateRouteRequest || \"\");\n\n            return {\n                url: globalImportUrl.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * RouteApi - functional programming interface\n * @export\n */\nexport const RouteApiFp = function(configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @param {CreateRouteRequest} [createRouteRequest] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createRoute(createRouteRequest?: CreateRouteRequest, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<string> {\n            const localVarAxiosArgs = RouteApiAxiosParamCreator(configuration).createRoute(createRouteRequest, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {string} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteRouteById(id: string, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<void> {\n            const localVarAxiosArgs = RouteApiAxiosParamCreator(configuration).deleteRouteById(id, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @summary Your GET endpoint\n         * @param {string} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getRouteById(id: string, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<RouteResponse> {\n            const localVarAxiosArgs = RouteApiAxiosParamCreator(configuration).getRouteById(id, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {string} routeId \n         * @param {string} groupId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        shareInGroup(routeId: string, groupId: string, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<void> {\n            const localVarAxiosArgs = RouteApiAxiosParamCreator(configuration).shareInGroup(routeId, groupId, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {string} id \n         * @param {UpdateRouteRequest} [updateRouteRequest] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateRouteById(id: string, updateRouteRequest?: UpdateRouteRequest, options?: any): (axios?: AxiosInstance, basePath?: string) => AxiosPromise<void> {\n            const localVarAxiosArgs = RouteApiAxiosParamCreator(configuration).updateRouteById(id, updateRouteRequest, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n    }\n};\n\n/**\n * RouteApi - factory interface\n * @export\n */\nexport const RouteApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    return {\n        /**\n         * \n         * @param {CreateRouteRequest} [createRouteRequest] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createRoute(createRouteRequest?: CreateRouteRequest, options?: any) {\n            return RouteApiFp(configuration).createRoute(createRouteRequest, options)(axios, basePath);\n        },\n        /**\n         * \n         * @param {string} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteRouteById(id: string, options?: any) {\n            return RouteApiFp(configuration).deleteRouteById(id, options)(axios, basePath);\n        },\n        /**\n         * \n         * @summary Your GET endpoint\n         * @param {string} id \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getRouteById(id: string, options?: any) {\n            return RouteApiFp(configuration).getRouteById(id, options)(axios, basePath);\n        },\n        /**\n         * \n         * @param {string} routeId \n         * @param {string} groupId \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        shareInGroup(routeId: string, groupId: string, options?: any) {\n            return RouteApiFp(configuration).shareInGroup(routeId, groupId, options)(axios, basePath);\n        },\n        /**\n         * \n         * @param {string} id \n         * @param {UpdateRouteRequest} [updateRouteRequest] \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateRouteById(id: string, updateRouteRequest?: UpdateRouteRequest, options?: any) {\n            return RouteApiFp(configuration).updateRouteById(id, updateRouteRequest, options)(axios, basePath);\n        },\n    };\n};\n\n/**\n * RouteApi - object-oriented interface\n * @export\n * @class RouteApi\n * @extends {BaseAPI}\n */\nexport class RouteApi extends BaseAPI {\n    /**\n     * \n     * @param {CreateRouteRequest} [createRouteRequest] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RouteApi\n     */\n    public createRoute(createRouteRequest?: CreateRouteRequest, options?: any) {\n        return RouteApiFp(this.configuration).createRoute(createRouteRequest, options)(this.axios, this.basePath);\n    }\n\n    /**\n     * \n     * @param {string} id \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RouteApi\n     */\n    public deleteRouteById(id: string, options?: any) {\n        return RouteApiFp(this.configuration).deleteRouteById(id, options)(this.axios, this.basePath);\n    }\n\n    /**\n     * \n     * @summary Your GET endpoint\n     * @param {string} id \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RouteApi\n     */\n    public getRouteById(id: string, options?: any) {\n        return RouteApiFp(this.configuration).getRouteById(id, options)(this.axios, this.basePath);\n    }\n\n    /**\n     * \n     * @param {string} routeId \n     * @param {string} groupId \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RouteApi\n     */\n    public shareInGroup(routeId: string, groupId: string, options?: any) {\n        return RouteApiFp(this.configuration).shareInGroup(routeId, groupId, options)(this.axios, this.basePath);\n    }\n\n    /**\n     * \n     * @param {string} id \n     * @param {UpdateRouteRequest} [updateRouteRequest] \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RouteApi\n     */\n    public updateRouteById(id: string, updateRouteRequest?: UpdateRouteRequest, options?: any) {\n        return RouteApiFp(this.configuration).updateRouteById(id, updateRouteRequest, options)(this.axios, this.basePath);\n    }\n\n}\n\n\n","module.exports = require(\"url\");","// tslint:disable\n/**\n * swagger\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport { Configuration } from \"./configuration\";\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport globalAxios, { AxiosPromise, AxiosInstance } from 'axios';\n\nexport const BASE_PATH = \"http://localhost:3000\".replace(/\\/+$/, \"\");\n\n/**\n *\n * @export\n */\nexport const COLLECTION_FORMATS = {\n    csv: \",\",\n    ssv: \" \",\n    tsv: \"\\t\",\n    pipes: \"|\",\n};\n\n/**\n *\n * @export\n * @interface RequestArgs\n */\nexport interface RequestArgs {\n    url: string;\n    options: any;\n}\n\n/**\n *\n * @export\n * @class BaseAPI\n */\nexport class BaseAPI {\n    protected configuration: Configuration | undefined;\n\n    constructor(configuration?: Configuration, protected basePath: string = BASE_PATH, protected axios: AxiosInstance = globalAxios) {\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = configuration.basePath || this.basePath;\n        }\n    }\n};\n\n/**\n *\n * @export\n * @class RequiredError\n * @extends {Error}\n */\nexport class RequiredError extends Error {\n    name: \"RequiredError\" = \"RequiredError\";\n    constructor(public field: string, msg?: string) {\n        super(msg);\n    }\n}\n","/**\n * swagger\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport class AuditDto {\n    'createdBy'?: string;\n    'createdAt'?: string;\n    'modifiedBy'?: string;\n    'modifiedAt'?: string;\n\n    static discriminator: string | undefined = undefined;\n\n    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [\n        {\n            \"name\": \"createdBy\",\n            \"baseName\": \"createdBy\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"createdAt\",\n            \"baseName\": \"createdAt\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"modifiedBy\",\n            \"baseName\": \"modifiedBy\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"modifiedAt\",\n            \"baseName\": \"modifiedAt\",\n            \"type\": \"string\"\n        }    ];\n\n    static getAttributeTypeMap() {\n        return AuditDto.attributeTypeMap;\n    }\n}\n\n","/**\n * swagger\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport class CreateGroupRequest {\n    'name'?: string;\n    'description'?: string;\n    'access'?: string;\n\n    static discriminator: string | undefined = undefined;\n\n    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [\n        {\n            \"name\": \"name\",\n            \"baseName\": \"name\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"description\",\n            \"baseName\": \"description\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"access\",\n            \"baseName\": \"access\",\n            \"type\": \"string\"\n        }    ];\n\n    static getAttributeTypeMap() {\n        return CreateGroupRequest.attributeTypeMap;\n    }\n}\n\n","/**\n * swagger\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { LineStringDto } from './lineStringDto';\n\nexport class CreateRouteRequest {\n    'title'?: string;\n    'description'?: string;\n    'path'?: LineStringDto;\n\n    static discriminator: string | undefined = undefined;\n\n    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [\n        {\n            \"name\": \"title\",\n            \"baseName\": \"title\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"description\",\n            \"baseName\": \"description\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"path\",\n            \"baseName\": \"path\",\n            \"type\": \"LineStringDto\"\n        }    ];\n\n    static getAttributeTypeMap() {\n        return CreateRouteRequest.attributeTypeMap;\n    }\n}\n\n","/**\n * swagger\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport class ErrorResponse {\n    'cause': string;\n    'message'?: string;\n\n    static discriminator: string | undefined = undefined;\n\n    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [\n        {\n            \"name\": \"cause\",\n            \"baseName\": \"cause\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"message\",\n            \"baseName\": \"message\",\n            \"type\": \"string\"\n        }    ];\n\n    static getAttributeTypeMap() {\n        return ErrorResponse.attributeTypeMap;\n    }\n}\n\n","/**\n * swagger\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport class GroupResponse {\n    'name'?: string;\n    'description'?: string;\n    'access'?: string;\n    'owner'?: string;\n\n    static discriminator: string | undefined = undefined;\n\n    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [\n        {\n            \"name\": \"name\",\n            \"baseName\": \"name\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"description\",\n            \"baseName\": \"description\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"access\",\n            \"baseName\": \"access\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"owner\",\n            \"baseName\": \"owner\",\n            \"type\": \"string\"\n        }    ];\n\n    static getAttributeTypeMap() {\n        return GroupResponse.attributeTypeMap;\n    }\n}\n\n","/**\n * swagger\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport class LineStringDto {\n    'type'?: string;\n    'coordinates'?: Array<Array<number>>;\n\n    static discriminator: string | undefined = undefined;\n\n    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [\n        {\n            \"name\": \"type\",\n            \"baseName\": \"type\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"coordinates\",\n            \"baseName\": \"coordinates\",\n            \"type\": \"Array<Array<number>>\"\n        }    ];\n\n    static getAttributeTypeMap() {\n        return LineStringDto.attributeTypeMap;\n    }\n}\n\n","/**\n * swagger\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport class LoginRequest {\n    'email'?: string;\n    'password'?: string;\n    'clientId'?: string;\n    'redirectUri'?: string;\n\n    static discriminator: string | undefined = undefined;\n\n    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [\n        {\n            \"name\": \"email\",\n            \"baseName\": \"email\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"password\",\n            \"baseName\": \"password\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"clientId\",\n            \"baseName\": \"clientId\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"redirectUri\",\n            \"baseName\": \"redirectUri\",\n            \"type\": \"string\"\n        }    ];\n\n    static getAttributeTypeMap() {\n        return LoginRequest.attributeTypeMap;\n    }\n}\n\n","/**\n * swagger\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport class LoginResponse {\n    'code'?: string;\n    'redirectUri'?: string;\n\n    static discriminator: string | undefined = undefined;\n\n    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [\n        {\n            \"name\": \"code\",\n            \"baseName\": \"code\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"redirectUri\",\n            \"baseName\": \"redirectUri\",\n            \"type\": \"string\"\n        }    ];\n\n    static getAttributeTypeMap() {\n        return LoginResponse.attributeTypeMap;\n    }\n}\n\n","/**\n * swagger\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport class PageResponse {\n    'page'?: number;\n    'size'?: number;\n    'items'?: Array<object>;\n\n    static discriminator: string | undefined = undefined;\n\n    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [\n        {\n            \"name\": \"page\",\n            \"baseName\": \"page\",\n            \"type\": \"number\"\n        },\n        {\n            \"name\": \"size\",\n            \"baseName\": \"size\",\n            \"type\": \"number\"\n        },\n        {\n            \"name\": \"items\",\n            \"baseName\": \"items\",\n            \"type\": \"Array<object>\"\n        }    ];\n\n    static getAttributeTypeMap() {\n        return PageResponse.attributeTypeMap;\n    }\n}\n\n","/**\n * swagger\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport class RegistrationRequest {\n    'email': string;\n    'password': string;\n\n    static discriminator: string | undefined = undefined;\n\n    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [\n        {\n            \"name\": \"email\",\n            \"baseName\": \"email\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"password\",\n            \"baseName\": \"password\",\n            \"type\": \"string\"\n        }    ];\n\n    static getAttributeTypeMap() {\n        return RegistrationRequest.attributeTypeMap;\n    }\n}\n\n","/**\n * swagger\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport class RegistrationResponse {\n    'userId'?: string;\n\n    static discriminator: string | undefined = undefined;\n\n    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [\n        {\n            \"name\": \"userId\",\n            \"baseName\": \"userId\",\n            \"type\": \"string\"\n        }    ];\n\n    static getAttributeTypeMap() {\n        return RegistrationResponse.attributeTypeMap;\n    }\n}\n\n","/**\n * swagger\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { AuditDto } from './auditDto';\nimport { LineStringDto } from './lineStringDto';\n\nexport class RouteResponse {\n    'title'?: string;\n    'description'?: string;\n    'path'?: LineStringDto;\n    'audit'?: AuditDto;\n\n    static discriminator: string | undefined = undefined;\n\n    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [\n        {\n            \"name\": \"title\",\n            \"baseName\": \"title\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"description\",\n            \"baseName\": \"description\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"path\",\n            \"baseName\": \"path\",\n            \"type\": \"LineStringDto\"\n        },\n        {\n            \"name\": \"audit\",\n            \"baseName\": \"audit\",\n            \"type\": \"AuditDto\"\n        }    ];\n\n    static getAttributeTypeMap() {\n        return RouteResponse.attributeTypeMap;\n    }\n}\n\n","/**\n * swagger\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport class TokenResponse {\n    'accessToken'?: string;\n    'accessTokenExpiration'?: string;\n    'refreshToken'?: string;\n    'refreshTokenExpiration'?: string;\n\n    static discriminator: string | undefined = undefined;\n\n    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [\n        {\n            \"name\": \"accessToken\",\n            \"baseName\": \"accessToken\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"accessTokenExpiration\",\n            \"baseName\": \"accessTokenExpiration\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"refreshToken\",\n            \"baseName\": \"refreshToken\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"refreshTokenExpiration\",\n            \"baseName\": \"refreshTokenExpiration\",\n            \"type\": \"string\"\n        }    ];\n\n    static getAttributeTypeMap() {\n        return TokenResponse.attributeTypeMap;\n    }\n}\n\n","/**\n * swagger\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport class UpdateGroupRequest {\n    'name'?: string;\n    'description'?: string;\n    'access'?: string;\n\n    static discriminator: string | undefined = undefined;\n\n    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [\n        {\n            \"name\": \"name\",\n            \"baseName\": \"name\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"description\",\n            \"baseName\": \"description\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"access\",\n            \"baseName\": \"access\",\n            \"type\": \"string\"\n        }    ];\n\n    static getAttributeTypeMap() {\n        return UpdateGroupRequest.attributeTypeMap;\n    }\n}\n\n","/**\n * swagger\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { LineStringDto } from './lineStringDto';\n\nexport class UpdateRouteRequest {\n    'title'?: string;\n    'description'?: string;\n    'path'?: LineStringDto;\n\n    static discriminator: string | undefined = undefined;\n\n    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [\n        {\n            \"name\": \"title\",\n            \"baseName\": \"title\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"description\",\n            \"baseName\": \"description\",\n            \"type\": \"string\"\n        },\n        {\n            \"name\": \"path\",\n            \"baseName\": \"path\",\n            \"type\": \"LineStringDto\"\n        }    ];\n\n    static getAttributeTypeMap() {\n        return UpdateRouteRequest.attributeTypeMap;\n    }\n}\n\n"],"sourceRoot":""}